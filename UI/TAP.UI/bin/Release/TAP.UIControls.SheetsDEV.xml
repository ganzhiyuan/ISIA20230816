<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TAP.UIControls.SheetsDEV</name>
    </assembly>
    <members>
        <member name="T:TAP.UIControls.SheetsDEV.TSheetCellStyle">
            <summary>
            This is base class of TSheet Cell Style
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheetCellStyle.IsAlternating">
            <summary>
            If 'TRUE', this is alternating row
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetCellStyle.Initialize(System.Int32)">
            <summary>
            This method initializes this instance
            </summary>
            <param name="rowNo">Row Number</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetCellStyle.ChangeRowNo(System.Int32)">
            <summary>
            This method change back color
            </summary>
            <param name="newRowNo"></param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheetDateTimeCellStyle">
            <summary>
            Date Time Cell Style
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetDateTimeCellStyle.#ctor(System.Int32)">
            <summary>
            This creates instance of this
            </summary>
            <param name="rowNo">Row no</param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheetIntegerCellStyle">
            <summary>
            Integer Cell Style
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetIntegerCellStyle.#ctor(System.Int32)">
            <summary>
            This creates instance of this
            </summary>
            <param name="rowNo">Row no</param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheetDecimalCellStyle">
            <summary>
            Decimal cell Style
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetDecimalCellStyle.#ctor(System.Int32)">
            <summary>
            This creates instance of this
            </summary>
            <param name="rowNo">Row no</param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheetShortTextCellStyle">
            <summary>
            Short Text Style
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetShortTextCellStyle.#ctor(System.Int32)">
            <summary>
            This creates instance of this
            </summary>
            <param name="rowNo">Row no</param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheetLongTextCellStyle">
            <summary>
            Short Text Style
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetLongTextCellStyle.#ctor(System.Int32)">
            <summary>
            This creates instance of this
            </summary>
            <param name="rowNo">Row no</param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheetCheckBoxCellType">
            <summary>
            CheckBox Style
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetCheckBoxCellType.#ctor(System.Int32)">
            <summary>
            This creates instance of this
            </summary>
            <param name="rowNo">Row no</param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheetHeaderStyle">
            <summary>
            Header Style
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetHeaderStyle.#ctor">
            <summary>
            This creates instance of this class
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheetHeaderStyle.Initialize">
            <summary>
            This initializes this instance
            </summary>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.EnumHorizontalAlignment">
            <summary>
            This is horizontal alignment list
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumHorizontalAlignment.LEFT">
            <summary>
            Left
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumHorizontalAlignment.CENTER">
            <summary>
            Center
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumHorizontalAlignment.RIGHT">
            <summary>
            Right
            </summary>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.EnumCellType">
            <summary>
            This is cell type list
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumCellType.TEXT">
            <summary>
            Text
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumCellType.INTEGER">
            <summary>
            Integer
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumCellType.DECIMAL">
            <summary>
            Decimal
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumCellType.DATETIME">
            <summary>
            Date and Time
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumCellType.DATE">
            <summary>
            Date
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumCellType.TIME">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumCellType.IMAGE">
            <summary>
            Image
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumCellType.CHECKBOX">
            <summary>
            Check Box
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.EnumCellType.COMBOBOX">
            <summary>
            Combo box
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.FormPanl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.FormPanl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.FormPanl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TColumn">
            <summary>
            This is TAP Datagrid View Column
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumn.TCellType">
            <summary>
            Cell type
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumn.DefaultCellStyle">
            <summary>
            Default cell Style
            </summary>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TColumnInfo">
            <summary>
            This is column info for sheet
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TColumnInfo.#ctor">
            <summary>
            This creates instance of ColumnInfo
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TColumnInfo.#ctor(System.String,System.String,System.Int32,System.Type,TAP.UIControls.SheetsDEV.EnumHorizontalAlignment,System.String,TAP.EnumFlagYN)">
            <summary>
            This creates instance of ColumnInfo
            </summary>
            <param name="text">Text</param>
            <param name="columnName">Column name</param>
            <param name="width">Width</param>
            <param name="valueType">Value type</param>
            <param name="alignment">Alignment</param>
            <param name="dataFormat">Data format</param>
            <param name="isKeyColumn">If 'YES' this column is key column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TColumnInfo.#ctor(System.String,System.String,System.Int32,System.Type,TAP.UIControls.SheetsDEV.EnumHorizontalAlignment,System.String,TAP.EnumFlagYN,TAP.UIControls.SheetsDEV.EnumCellType)">
            <summary>
            This creates instance of ColumnInfo
            </summary>
            <param name="text">Text</param>
            <param name="columnName">Column name</param>
            <param name="width">Width</param>
            <param name="valueType">Value type</param>
            <param name="alignment">Alignment</param>
            <param name="dataFormat">Data format</param>
            <param name="isKeyColumn">If 'YES' this column is key column</param>
            <param name="cellType">Cell Type</param>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumnInfo.IsKeyColumn">
            <summary>
            If 'YES', this is key colulmn
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumnInfo.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumnInfo.ColumnName">
            <summary>
            Column name
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumnInfo.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumnInfo.ValueType">
            <summary>
            Value type
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumnInfo.Alignment">
            <summary>
            Alignment
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumnInfo.CellType">
            <summary>
            Cell Type
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumnInfo.DataFormat">
            <summary>
            Data Format
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TColumnInfo.ColumnIndex">
            <summary>
            Column Index
            </summary>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.TransparentPanel.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TransparentPanel.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TransparentPanel.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheet">
            <summary>
            This is default sheet control of TAPFX
            </summary>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheet.Sheet_CellClick">
            <summary>
            Event Handler of Sheet_CellClick
            </summary>
            <param name="sender">sender</param>
            <param name="e">Event argument</param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheet.Sheet_ColumnHeaderClick">
            <summary>
            Event Handler of Sheet_ColumnHeaderClick
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheet.Sheet_ColumnWidthChanged">
            <summary>
            Event Handler of Sheet_ColumnWidthChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheet.Sheet_CellDoubleClick">
            <summary>
            Event Handler of Sheet_CellDoubleClicked
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.TSheet.Sheet_CheckedChange">
            <summary>
            Event Hander of Sheet_ChekcedChanged
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:TAP.UIControls.SheetsDEV.TSheet.Sheet_CellClicked">
            <summary>
            This event will be occured when clicks cell
            </summary>
        </member>
        <member name="E:TAP.UIControls.SheetsDEV.TSheet.Sheet_ColumnHeaderClicked">
            <summary>
            This event will be occured when clicks column header
            </summary>
        </member>
        <member name="E:TAP.UIControls.SheetsDEV.TSheet.Sheet_ColumnWidthChageEnd">
            <summary>
            This event will be occured after colunm width changed.
            </summary>
        </member>
        <member name="E:TAP.UIControls.SheetsDEV.TSheet.Sheet_CellDoubleClicked">
            <summary>
            This event will be occured when double-clicks cell
            </summary>
        </member>
        <member name="E:TAP.UIControls.SheetsDEV.TSheet.Sheet_CheckedChanged">
            <summary>
            This event will be occured when checkbox value changed
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheet.SelectedColumn">
            <summary>
            Selected column
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheet.SelectedRow">
            <summary>
            Selected row
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheet.KeyColumn">
            <summary>
            Name column index when model binded
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheet.DisplayColumnName">
            <summary>
            Column list for display
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheet.FressageConverter">
            <summary>
            Fressage converter
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.#ctor">
            <summary>
            This creates instance of TSheet
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheet.RepresentativeValue">
            <summary>
            Representative value of control
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheet.ControlID">
            <summary>
            Identificator of control
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheet.IsRequired">
            <summary>
            If 'TRUE', this controls is required
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetBackColor(System.Drawing.Color)">
            <summary>
            This method sets back color of control
            </summary>
            <param name="color"></param>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.TSheet.NeedToTranslate">
            <summary>
            If 'TRUE', text of this control is translated
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetColumns(TAP.Models.ModelSet)">
            <summary>
            This method creates columns using name of each model set members
            </summary>
            <param name="modelSet">Model Set</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetColumns(TAP.Models.ModelSet,System.Int32)">
            <summary>
            This method creates columns using name of each model set members
            </summary>
            <param name="modelSet">Model Set</param>
            <param name="columnWidth">Common column with</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetColumns(TAP.Models.ModelSet,System.Int32,System.Boolean)">
            <summary>
            This method creates columns using name of each model set members
            </summary>
            <param name="modelSet">Model Set</param>
            <param name="columnWidth">Common column with</param>
            <param name="withCheckbox">If 'YES', fist column will be checkbox column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.AddNewColumn(System.String,System.String,System.Int32,System.Type,TAP.UIControls.SheetsDEV.EnumHorizontalAlignment,TAP.EnumFlagYN)">
            <summary>
            This method adds column to defaut sheet
            </summary>
            <param name="text">Text of column</param>
            <param name="columnName">Data Column name</param>
            <param name="width">Width</param>
            <param name="valueType">Value Type</param>
            <param name="alignment">Horizontal alignment in cell</param>
            <param name="isKeyColumn">If 'YES' this is key column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.AddNewColumn(System.String,System.String,System.Int32,System.Type,TAP.UIControls.SheetsDEV.EnumHorizontalAlignment,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This method adds column to defaut sheet
            </summary>
            <param name="text">Text of column</param>
            <param name="columnName">Data Column name</param>
            <param name="width">Width</param>
            <param name="valueType">Value Type</param>
            <param name="alignment">Horizontal alignment in cell</param>
            <param name="isKeyColumn">If 'YES' this is key column</param>
            <param name="isCheckBoxColumn">If 'YES', this column is checkbox type</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.AddNewColumn(System.String,System.String,System.Int32,System.Type,TAP.UIControls.SheetsDEV.EnumHorizontalAlignment,TAP.EnumFlagYN,TAP.UIControls.SheetsDEV.EnumCellType)">
            <summary>
            This method adds column to defaut sheet
            </summary>
            <param name="text">Text of column</param>
            <param name="columnName">Data Column name</param>
            <param name="width">Width</param>
            <param name="valueType">Value Type</param>
            <param name="alignment">Horizontal alignment in cell</param>
            <param name="isKeyColumn">If 'YES' this is key column</param>
            <param name="cellType">Cell type</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.AddNewColumn(TAP.UIControls.SheetsDEV.TColumnInfo)">
            <summary>
            This method adds column to defaut sheet
            </summary>
            <param name="columnInfo">Common column info</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.AddNewColumns(System.Collections.Generic.List{TAP.UIControls.SheetsDEV.TColumnInfo})">
            <summary>
            This method adds column to defaut sheet
            </summary>
            <param name="columnInfos">Common column informations</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.AddComboboxColumn(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            
            </summary>
            <param name="headerText"></param>
            <param name="dataSource"></param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.ModelSet)">
            <summary>
            This method displays model set.
            </summary>
            <param name="models">Model set</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.ModelSet,System.Boolean)">
            <summary>
            This method displays model set.
            </summary>
            <param name="models">Model set</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Collections.Generic.List{TAP.Models.Model})">
            <summary>
            This method displays model set.
            </summary>
            <param name="models">Model set</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataTable)">
            <summary>
            This method displays model set.
            </summary>
            <param name="dataTable">Data table</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Collections.Generic.List{TAP.Models.Model},System.Boolean)">
            <summary>
            This method displays model set.
            </summary>
            <param name="models">Model set</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataTable,System.Boolean)">
            <summary>
            This method displays model set.
            </summary>
            <param name="dataTable">Data table</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.ModelSet,System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model set.
            </summary>
            <param name="models">Model set</param>
            <param name="image">Image</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Collections.Generic.List{TAP.Models.Model},System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model set.
            </summary>
            <param name="models">Model set</param>
            <param name="image">Image</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataTable,System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model set.
            </summary>
            <param name="dataTable">Data table</param>
            <param name="image">Image</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.ModelSet,System.Drawing.Image,System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model set.
            </summary>
            <param name="models">Model set</param>
            <param name="yesImage">Image of 'Yes' case</param>
            <param name="noImage">Image of 'No' case</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Collections.Generic.List{TAP.Models.Model},System.Drawing.Image,System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model set.
            </summary>
            <param name="models">Model set</param>
            <param name="yesImage">Image of 'Yes' case</param>
            <param name="noImage">Image of 'No' case</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataTable,System.Drawing.Image,System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model set.
            </summary>
            <param name="dataTable">Data Table</param>
            <param name="yesImage">Image of 'Yes' case</param>
            <param name="noImage">Image of 'No' case</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.Model)">
            <summary>
            This method displays model.
            </summary>
            <param name="model">Model set</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataRow)">
            <summary>
            This method displays model.
            </summary>
            <param name="dataRow">Data Row</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.Model,System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="model">Model set</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataRow,System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="dataRow">Data Row</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.Model,System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="model">Model set</param>
            <param name="image">Image</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataRow,System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="dataRow">Data Row</param>
            <param name="image">Image</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.Model,System.Drawing.Image,System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="model">Model set</param>
            <param name="yesImage">Image of 'Yes' case</param>
            <param name="noImage">Image of 'No' case</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataRow,System.Drawing.Image,System.Drawing.Image,System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="dataRow">Data Row</param>
            <param name="yesImage">Image of 'Yes' case</param>
            <param name="noImage">Image of 'No' case</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.Model,System.Drawing.Image,System.Drawing.Image,System.Drawing.Color,System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="model">Model set</param>
            <param name="yesImage">Image of 'Yes' case</param>
            <param name="noImage">Image of 'No' case</param>
            <param name="rowColor">Row color</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataRow,System.Drawing.Image,System.Drawing.Image,System.Drawing.Color,System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="dataRow">Data Row</param>
            <param name="yesImage">Image of 'Yes' case</param>
            <param name="noImage">Image of 'No' case</param>
            <param name="rowColor">Row color</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(TAP.Models.Model,System.Drawing.Image,System.Drawing.Image,System.Drawing.Color,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="model">Model</param>
            <param name="yesImage">Image of 'Yes' case</param>
            <param name="noImage">Image of 'No' case</param>
            <param name="rowColor">Row color</param>
            <param name="boldColumns">Columns for bold</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.DisplayData(System.Data.DataRow,System.Drawing.Image,System.Drawing.Image,System.Drawing.Color,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            This method displays model.
            </summary>
            <param name="dataRow">Data Row</param>
            <param name="yesImage">Image of 'Yes' case</param>
            <param name="noImage">Image of 'No' case</param>
            <param name="rowColor">Row color</param>
            <param name="boldColumns">Columns for bold</param>
            <param name="withCheckBox">If "TRUE", this sheet includes checkbox on first column</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetImage(System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            This method set image on cell specified
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="image">Image</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.ClearRows">
            <summary>
            This method removes all rows
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.GetString(System.Int32,System.Int32)">
            <summary>
            This method returns string of specified cell
            </summary>
            <param name="column">Column Index</param>
            <param name="row">Row Index</param>
            <returns>String of specified cell</returns>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.GetValue(System.Int32,System.Int32)">
            <summary>
            This method returns value of specified cell
            </summary>
            <param name="column">Column Index</param>
            <param name="row">Row Index</param>
            <returns>String of specified cell</returns>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.GetCheckedValues">
            <summary>
            This method returns key column value list of checked rows.
            </summary>
            <returns>Key column values</returns>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.GetCheckedRows">
            <summary>
            This method returns row number list of checked rows.
            </summary>
            <returns>Key column values</returns>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SortRows(System.String)">
            <summary>
            This method sort rows using specified column name
            </summary>
            <param name="columnName">column name</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SortRows(System.Int32)">
            <summary>
            This method sort rows using specified column name
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SortRows(System.String,System.ComponentModel.ListSortDirection)">
            <summary>
            This method sort rows using specified column name
            </summary>
            <param name="columnName">column name</param>
            <param name="direction">Sorting direction</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SortRows(System.Int32,System.ComponentModel.ListSortDirection)">
            <summary>
            This method sort rows using specified column name
            </summary>
            <param name="columnIndex">Column index</param>
            <param name="direction">Sorting direction</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.ExportToExcel(System.String)">
            <summary>
            This method exports data via excel
            </summary>
            <param name="filePath">Excel file path</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.ExportToExcel(System.String,System.String)">
            <summary>
            This method exports data via excel
            </summary>
            <param name="savingDir">Directory for saving excel file</param>
            <param name="fileName">Excel file name</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.GetColumnIndex(System.String)">
            <summary>
            This method returns colulmn index of specified column name
            </summary>
            <param name="columnName">Column name</param>
            <returns>Index of specified column</returns>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.GetRowIndex(System.String,System.Int32)">
            <summary>
            Thie method returns row index includes spcified value
            </summary>
            <param name="value">Value</param>
            <param name="columnIndex">Column index</param>
            <returns></returns>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.GetEmptyRow(System.Int32)">
            <summary>
            This method find empty row index
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Empty row index</returns>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetReadOnlyColumns(System.Collections.Generic.List{System.Int32})">
            <summary>
            This method set specfied coumn to read-only
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetReadOnlyColumns(System.Int32)">
            <summary>
            This method set specfied coumn to read-only
            </summary>
            <param name="columnIndex">Column index</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetText(System.Int32,System.Int32,System.String)">
            <summary>
            This method set text on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="text">Text</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetText(System.Int32,System.Int32,System.String,System.Drawing.Color)">
            <summary>
            This method set text on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="text">Text</param>
            <param name="foreColor">Fore Color</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetText(System.Int32,System.Int32,System.String,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            This method set text on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="text">Text</param>
            <param name="foreColor">Fore Color</param>
            <param name="fontStyle">Font Style</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetText(System.Int32,System.Int32,System.String,System.Drawing.Color,System.Drawing.FontStyle,TAP.UIControls.SheetsDEV.EnumHorizontalAlignment)">
            <summary>
            This method set text on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="text">Text</param>
            <param name="foreColor">Fore Color</param>
            <param name="fontStyle">Font Style</param>
            <param name="alignment">Text alignment</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetText(System.Int32,System.Int32,System.String,System.Drawing.Color,System.Drawing.FontStyle,TAP.UIControls.SheetsDEV.EnumHorizontalAlignment,System.Drawing.Color,System.Object)">
            <summary>
            This method set text on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="text">Text</param>
            <param name="foreColor">Fore Color</param>
            <param name="fontStyle">Font Style</param>
            <param name="alignment">Text alignment</param>
            <param name="backColor">Back color</param>
            <param name="tag">Tag</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetValue(System.Int32,System.Int32,System.Object)">
            <summary>
            This method set value on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="value">Value</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetValue(System.Int32,System.Int32,System.Object,System.Drawing.Color)">
            <summary>
            This method set vlaue on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="value">Value</param>
            <param name="foreColor">Fore Color</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetValue(System.Int32,System.Int32,System.Object,System.Drawing.Color,System.Drawing.FontStyle)">
            <summary>
            This method set text on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="value">Value</param>
            <param name="foreColor">Fore Color</param>
            <param name="fontStyle">Font Style</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetValue(System.Int32,System.Int32,System.Object,System.Drawing.Color,System.Drawing.FontStyle,TAP.UIControls.SheetsDEV.EnumHorizontalAlignment)">
            <summary>
            This method set text on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="value">Value</param>
            <param name="foreColor">Fore Color</param>
            <param name="fontStyle">Font Style</param>
            <param name="alignment">Text alignment</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetValue(System.Int32,System.Int32,System.Object,System.Drawing.Color,System.Drawing.FontStyle,TAP.UIControls.SheetsDEV.EnumHorizontalAlignment,System.Drawing.Color,System.Object)">
            <summary>
            This method set value on specified cell.
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="value">Value</param>
            <param name="foreColor">Fore Color</param>
            <param name="fontStyle">Font Style</param>
            <param name="alignment">Text alignment</param>
            <param name="backColor">Back color</param>
            <param name="tag">Tag</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetColumnBackColor(System.Int32,System.Drawing.Color)">
            <summary>
            This method set cell back color
            </summary>
            <param name="column">Column index</param>
            <param name="color">Color</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetRowBackColor(System.Int32,System.Drawing.Color)">
            <summary>
            This method set cell back color
            </summary>
            <param name="row">Row index</param>
            <param name="color">Color</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetCellBackColor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            This method set cell back color 
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="color">Color</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetColumnForeColor(System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            This method set forecolor of cell
            </summary>
            <param name="column">Column index</param>
            <param name="color">Color</param>
            <param name="bold">If 'TRUE', text will be bolded</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetRowForeColor(System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            This method set forecolor of cell
            </summary>
            <param name="row">Row index</param>
            <param name="color">Color</param>
            <param name="bold">If 'TRUE', text will be bolded</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.SetCellForeColor(System.Int32,System.Int32,System.Drawing.Color,System.Boolean)">
            <summary>
            This method set forecolor of cell
            </summary>
            <param name="column">Column index</param>
            <param name="row">Row index</param>
            <param name="color">Color</param>
            <param name="bold">If 'TRUE', text will be bolded</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.TSheet_CellClick(System.Object,DevExpress.XtraGrid.Views.Grid.RowCellClickEventArgs)">
            <summary>
            This event hander will act after clicking cells
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:TAP.UIControls.SheetsDEV.TSheet.components">
            <summary> 
            필수 디자이너 변수입니다.
            </summary>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.Dispose(System.Boolean)">
            <summary> 
            사용 중인 모든 리소스를 정리합니다.
            </summary>
            <param name="disposing">관리되는 리소스를 삭제해야 하면 true이고, 그렇지 않으면 false입니다.</param>
        </member>
        <member name="M:TAP.UIControls.SheetsDEV.TSheet.InitializeComponent">
            <summary> 
            디자이너 지원에 필요한 메서드입니다. 
            이 메서드의 내용을 코드 편집기로 수정하지 마십시오.
            </summary>
        </member>
        <member name="T:TAP.UIControls.SheetsDEV.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:TAP.UIControls.SheetsDEV.Properties.Resources.Culture">
            <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
    </members>
</doc>
