<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TAP.Models</name>
    </assembly>
    <members>
        <member name="T:TAP.Models.Code.CustomCodeModel">
            <summary>
            This is user-custom code model.<br></br>
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CustomCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CustomCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CustomCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CustomCodeModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CustomCodeModel.#ctor(System.String,System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="category">Category</param>
            <param name="subCategory">Sub category</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.CustomCodeModel.CreateInstance(System.String,System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="category">Category</param>
            <param name="subCategory">Sub category</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.CustomCodeModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.FGGroupCodeModel">
            <summary>
            This is FG group model.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.FGGroupCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.FGGroupCodeModel._CODE_FGGROUP">
            <summary>
            Category of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.FGGroupCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.FGGroupCodeModel.Instance">
            <summary>
            Static accessor of Code
            </summary>
        </member>
        <member name="P:TAP.Models.Code.FGGroupCodeModel.Name">
            <summary>
            Model name that guarantees identity
            </summary>
        </member>
        <member name="M:TAP.Models.Code.FGGroupCodeModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.FGGroupCodeModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="facility">Facility</param>
        </member>
        <member name="M:TAP.Models.Code.FGGroupCodeModel.#ctor(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="facility">Facility</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.FGGroupCodeModel.CreateInstance(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="facility">Facility</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.FGGroupCodeModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.IDManagerCodeModel">
            <summary>
            This is ID manager code model.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.IDManagerCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.IDManagerCodeModel._CODE_IDMANAGER">
            <summary>
            Category of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.IDManagerCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.IDManagerCodeModel.Instance">
            <summary>
            Static accessor of Code
            </summary>
        </member>
        <member name="P:TAP.Models.Code.IDManagerCodeModel.Name">
            <summary>
            Model name that guarantees identity
            </summary>
        </member>
        <member name="M:TAP.Models.Code.IDManagerCodeModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.IDManagerCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.IDManagerCodeModel.#ctor(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="bizObject">BIZ object</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.IDManagerCodeModel.CreateInstance(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="bizObject">BIZ object</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.IDManagerCodeModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.TechCodeModel">
            <summary>
            This is tech code model.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.TechCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.TechCodeModel.Instance">
            <summary>
            Static accessor of Code
            </summary>
        </member>
        <member name="P:TAP.Models.Code.TechCodeModel.Name">
            <summary>
            Model name that guarantees identity
            </summary>
        </member>
        <member name="M:TAP.Models.Code.TechCodeModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.TechCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="usedOnly">현재 사용중인 코드만을 로드할 것인지 여부</param>
        </member>
        <member name="M:TAP.Models.Code.TechCodeModel.#ctor(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="facility">Facility</param>
            <param name="usedOnly">Using or not</param>
        </member>
        <member name="M:TAP.Models.Code.TechCodeModel.CreateInstance(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="facility">Facility</param>
            <param name="usedOnly">Using or not</param>
        </member>
        <member name="M:TAP.Models.Code.TechCodeModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.MailingListCodeModel">
            <summary>
            This is mailing list code model.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.MailingListCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.MailingListCodeModel._CODE_OPERATION">
            <summary>
            Category of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.MailingListCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.MailingListCodeModel.Instance">
            <summary>
            Static accessor of Code
            </summary>
        </member>
        <member name="P:TAP.Models.Code.MailingListCodeModel.Name">
            <summary>
            Model name that guarantees identity
            </summary>
        </member>
        <member name="M:TAP.Models.Code.MailingListCodeModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.MailingListCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.MailingListCodeModel.#ctor(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="mainOperation">Main operation</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.MailingListCodeModel.CreateInstance(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="mainOperation">Main operation</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.MailingListCodeModel.Copy">
            <summary>
            This method makes copy of this model.
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.FacilityCodeModel">
            <summary>
            This is facility code model.<br></br>
            Facility 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.FacilityCodeModel._XPATH">
            <summary>
            모델의 XPath입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.FacilityCodeModel._CODE_FACILITY">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.FacilityCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.FacilityCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.FacilityCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.FacilityCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.FacilityCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">현재 사용중인 코드만을 로드할 것인지 여부</param>
        </member>
        <member name="M:TAP.Models.Code.FacilityCodeModel.#ctor(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="region">지역</param>
            <param name="usedOnly">현재 사용중인 코드만을 로드할 것인지 여부</param>
        </member>
        <member name="M:TAP.Models.Code.FacilityCodeModel.CreateInstance(System.String,TAP.EnumFlagYN)">
            <summary>
            모델의 인스턴스를 생성합니다.<br></br>
            </summary>
            <param name="region">지역</param>
            <param name="usedOnly">현재 사용중인 코드만을 로드할 것인지 여부</param>
        </member>
        <member name="M:TAP.Models.Code.FacilityCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.FGCodeCodeModel">
            <summary>
            This is FG code model.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.FGCodeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.FGCodeCodeModel._CODE_FGCODE">
            <summary>
            Category of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.FGCodeCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.FGCodeCodeModel.Instance">
            <summary>
            Static accessor of Code
            </summary>
        </member>
        <member name="P:TAP.Models.Code.FGCodeCodeModel.Name">
            <summary>
            Model name that guarantees identity
            </summary>
        </member>
        <member name="M:TAP.Models.Code.FGCodeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.FGCodeCodeModel.#ctor(System.String,System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="facility">Facility</param>
            <param name="fgGroup">FG Group</param>
        </member>
        <member name="M:TAP.Models.Code.FGCodeCodeModel.#ctor(System.String,System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="facility">Facility</param>
            <param name="fgGroup">FG Group</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.FGCodeCodeModel.CreateInstance(System.String,System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="facility">Facility</param>
            <param name="fgGroup">FG Group</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.FGCodeCodeModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.MainOPCodeModel">
            <summary>
            This is main operation code model.<br></br>
            메인 오퍼레이션 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.MainOPCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.MainOPCodeModel._CODE_MAINOPERATION">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.MainOPCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.MainOPCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.MainOPCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.MainOPCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.MainOPCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.MainOPCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.MainOPCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.CodeModel">
            <summary>
            This is base model of all code models.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._TABLE_NAME_CODE">
            <summary>
            Table name of system code
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._COLUMN_NAME_CATEGORY">
            <summary>
            Column name of category
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._COLUMN_NAME_SUBCATEGORY">
            <summary>
            Column name of sub category
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._COLUMN_NAME_USED">
            <summary>
            Column name of "USED"
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._COLUMN_NAME_CODE">
            <summary>
            Virtual column name of "Code"
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._COLUMN_NAME_CUSTOM01">
            <summary>
            Custom 01 column name
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._COLUMN_NAME_CUSTOM02">
            <summary>
            Custom 02 column name
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._COLUMN_NAME_CUSTOM03">
            <summary>
            Custom 03 column name
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._COLUMN_NAME_CUSTOM04">
            <summary>
            Custom 04 column name
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._COLUMN_NAME_CUSTOM05">
            <summary>
            Custom 05 column name
            Custom 05 컬럼이름
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._ARGUMENTKEY_CATEGORY">
            <summary>
            Argument name of category
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._ARGUMENTKEY_SUBCATEGORY">
            <summary>
            Argument name of sub category
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel._BASE_TABLE_NAME_SYSTEMCODE">
            <summary>
            Table name of code
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel.used">
            <summary>
            If "YES", this code is using.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel.category">
            <summary>
            Category of code
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel.subCategory">
            <summary>
            Sub category of code
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModel.codes">
            <summary>
            Code list
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModel.CodeList">
            <summary>
            Code list 
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.Dispose">
            <summary>
            This method disposes this model
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.MakeDefaultArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.MakeParentArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.SaveModelData(System.String)">
            <summary>
            This method makes argument list for saving.
            </summary>
            <param name="updateUser">User</param>
            <returns>ArgumentPack</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method is not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.MergeModel(TAP.Models.Model,System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="model"></param>
            <param name="updateUser"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.SplitModel(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="splitModelName"></param>
            <param name="nestModelNames"></param>
            <param name="updateUser"></param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.AssignArrayValues(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.LoadMailReceiverList(System.String)">
            <summary>
            This methods loads receiver list
            </summary>
            <param name="mailType">Mailing type</param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.CreateMailMessage(System.String)">
            <summary>>
            This method is not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method is not supported.
            </summary>
            <param name="arguments"></param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.GetChangedLevel(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method is not supported.
            </summary>
            <param name="defaultInfo"></param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.CreateInstance(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method is not supported.
            </summary>
            <param name="defaultInformation"></param>
            <param name="defaultData"></param>
            <param name="includeNestData"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.LoadBasicModel(System.Int32)">
            <summary>
            This method is not supported.
            </summary>
            <param name="modelLevel"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.SetDefaultTable(System.String)">
            <summary>
            This method sets default table.
            </summary>
            <param name="xPath">XPath</param>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.GetNewSequence">
            <summary>
            This method gets next sequence for new model
            </summary>
            <returns>New sequence</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.LoadCategories">
            <summary>
            This method lodes categories
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.LoadSubCategories(System.String)">
            <summary>
            This method lodes sub categories
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.LoadAllCategory">
            <summary>
            This method loads category list
            </summary>
            <returns>Category list array</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModel.LoadAllSubCategory(System.String)">
            <summary>
            This method loads subcategory  list of assigned category.
            </summary>
            <param name="category">Category</param>
            <returns>Sub category list array</returns>
        </member>
        <member name="T:TAP.Models.Code.CodeModelUnitSet">
            <summary>
            This is code model set.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnitSet.#ctor">
            <summary>
            This method creates instance of this.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnitSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnitSet.Codes">
            <summary>
            This method loads all models of model set.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnitSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnitSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            TThis method is not supported.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="lastEventComment">Last event comment</param>
            <param name="lastJobCode">Last job code</param>
            <param name="lastEventCode">Last event code</param>
            <param name="lastMainOperation">Last Main operation</param>
            <param name="lastOperation">Last operation</param>
            <param name="lastStep">Last setp</param>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnitSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This method is not supported.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="T:TAP.Models.Code.CodeModelUnit">
            <summary>
            This model is code unit.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.used">
            <summary>
            If "TRUE", this code is in using.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.category">
            <summary>
            Category of code
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.subCategory">
            <summary>
            Sub category of code
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.description">
            <summary>
            Description of code
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom01">
            <summary>
            Custom column 01
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom02">
            <summary>
            Custom column 02
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom03">
            <summary>
            Custom column 03
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom04">
            <summary>
            Custom column 04
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom05">
            <summary>
            Custom column 04
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom06">
            <summary>
            Custom column 06
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom07">
            <summary>
            Custom column 07
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom08">
            <summary>
            Custom column 08
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom09">
            <summary>
            Custom column 09
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeModelUnit.custom10">
            <summary>
            Custom column 10
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.DefaultInformation">
            <summary>
            Hierachical structure of system model
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Used">
            <summary>
            If "YES", this code is in using.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Category">
            <summary>
            Category of code
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.SubCategory">
            <summary>
            Sub category of code
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Description">
            <summary>
            Description of code
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom01">
            <summary>
            Custom column 01
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom02">
            <summary>
            Custom column 02
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom03">
            <summary>
            Custom column 03
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom04">
            <summary>
            Custom column 04
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom05">
            <summary>
            Custom column 05
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom06">
            <summary>
            Custom column 06
            커스텀코드06
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom07">
            <summary>
            Custom column 07
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom08">
            <summary>
            Custom column 08
            커스텀코드08
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom09">
            <summary>
            Custom column 09
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Custom10">
            <summary>
            Custom column 10
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeModelUnit.Name">
            <summary>
            Model name that guarantees identity
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.#ctor(System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="systemUnitData">Data</param>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.#ctor(System.String,System.String,System.String,System.String,TAP.EnumFlagYN,System.String,System.Int32)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="category">Category</param>
            <param name="subCategory">Sub category</param>
            <param name="name">Identificator</param>
            <param name="description">Description</param>
            <param name="used">If "YES", this code is in using.</param>
            <param name="user">Code unit manager</param>
            <param name="sequence">Sequence of code</param>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.#ctor(System.String,System.String,System.String,System.String,TAP.EnumFlagYN,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="category">Category</param>
            <param name="subCategory">Sub category</param>
            <param name="name">Identificator</param>
            <param name="description">Description</param>
            <param name="used">If "YES", this code is in using.</param>
            <param name="user">Code unit manager</param>
            <param name="sequence">Sequence of code</param>
            <param name="custom01">Custom data 01</param>
            <param name="custom02">Custom data 02</param>
            <param name="custom03">Custom data 03</param>
            <param name="custom04">Custom data 04</param>
            <param name="custom05">Custom data 05</param>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.Dispose">
            <summary>
            This method disposes this model
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.Copy">
            <summary>
            This method makes copy of this model
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads model history data
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method extracts name list of hierachical structure that is consist this model.
            </summary>
            <returns>Array includes name list of hierachical structure that is consist this model</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.GetDefaultInfo">
            <summary>
            This method returns default information of model
            </summary>
            <returns>Default information of model</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>>
            This model changes hierachical structure of this models
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Job code</param>
            <param name="mainOperation">Main operation</param>
            <param name="operation">Opertaion</param>
            <param name="step">Last step</param>
            <param name="status">Last step</param>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.GetChangedLevel(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method get member that changed by changing default info event
            </summary>
            <param name="defaultInfo">Model defult Info.</param>
            <returns>Beggest level changed</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.AssignArrayValues">
            <summary>
            This model does not have nest model.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.MakeDefaultArgumentPack">
            <summary>
            This method makes default argument pack
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.MergeModel(TAP.Models.Model,System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="model"></param>
            <param name="updateUser"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.SplitModel(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="splitModelName"></param>
            <param name="nestModelNames"></param>
            <param name="updateUser"></param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.MakeParentArgumentPack">
            <summary>
            This method is not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.AssignArrayValues(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.CreateMailMessage(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.LoadMailReceiverList(System.String)">
            <summary>
            This methods loads receiver list
            </summary>
            <param name="mailType">Mailing type</param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.CreateInstance(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method is not supported.
            </summary>
            <param name="defaultInformation"></param>
            <param name="defaultData"></param>
            <param name="includeNestData"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeModelUnit.LoadBasicModel(System.Int32)">
            <summary>
            This method is not supported.
            </summary>
            <param name="modelLevel"></param>
        </member>
        <member name="T:TAP.Models.Code.CodeDefaultInfo">
            <summary>
            This class is hierachical structure of system model.<br></br>
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeDefaultInfo.category">
            <summary>
            Category level
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeDefaultInfo.subCategory">
            <summary>
            Sub category level
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeDefaultInfo.code">
            <summary>
            Code level
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeDefaultInfo.Category">
            <summary>
            Server level
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeDefaultInfo.SubCategory">
            <summary>
            Sub Category level
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CodeDefaultInfo.Code">
            <summary>
            Service group level
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.#ctor">
            <summary>
            This creates instance of hierachical structure.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.#ctor(System.String,System.String,System.String)">
            <summary>
            This crates instance of hierachical structure.
            </summary>
            <param name="category"></param>
            <param name="subCategory"></param>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.#ctor(System.Data.DataRow)">
            <summary>
            This creates instance of hierachical structure.
            </summary>
            <param name="dataRow">Hierachical structure data</param>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.Dispose">
            <summary>
            This dispoes instance of hierachical structure.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.CreateInstance(System.String,System.String,System.String)">
            <summary>
            This method instance of hierachical structure.
            </summary>
            <param name="category">Category</param>
            <param name="subCategory">Sub Category</param>
            <param name="name">Name</param>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.CreateInstance(System.Data.DataRow)">
            <summary>
            This class does not support this method.
            </summary>
            <param name="defaultData"></param>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.Copy">
            <summary>
            This method makes copy of hierachical structure.
            </summary>
            <returns>Copy of hierachical structure</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.CreateXPath(System.Int32)">
            <summary>
            This method is not implemented 
            </summary>
            <param name="level">level</param>
            <returns>xPath</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.GetMemberLevel(System.String)">
            <summary>
            This method get level of specified member;
            </summary>
            <param name="memberName">Level of specified member</param>
        </member>
        <member name="T:TAP.Models.Code.CodeDefaultInfo.HierarchicalDefaultInfo">
            <summary>
            Enumeratior of hierachical structure
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeDefaultInfo.HierarchicalDefaultInfo.REGION">
            <summary>
            Region
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeDefaultInfo.HierarchicalDefaultInfo.FACILITY">
            <summary>
            Facility
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeDefaultInfo.HierarchicalDefaultInfo.CATEGORY">
            <summary>
            Server
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeDefaultInfo.HierarchicalDefaultInfo.SUBCATEGORY">
            <summary>
            Disk
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CodeDefaultInfo.HierarchicalDefaultInfo.CODE">
            <summary>
            Service group
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.MakeArgumentPack">
            <summary>
            This method makes argument pack using hierachical structure.
            This method made argument pack does not contain identification argument.
            </summary>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.MakeArgumentPack(System.Int32,System.Boolean)">
            <summary>
             This method makes argument pack using default info.
             This method made argument pack contains identification argument.
            </summary>
            <param name="level">Level of current model.</param>
            <param name="isParent">If this argument set to false, This method return data for one model only.</param>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            This method changes model default info
            </summary>
            <param name="infoDictionary">Default Info dictionary</param>
            <param name="modelLevel">Model level</param>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            This method changes model default info
            </summary>
            <param name="infoDictionary">Default Info dictionary</param>
            <param name="modelLevel">Model level</param>
            <param name="defaultInfoMembers">Default info members</param>
        </member>
        <member name="M:TAP.Models.Code.CodeDefaultInfo.GetCurrentDefaultInfo">
            <summary>
            This method extract default info string as dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="T:TAP.Models.Code.AnalysisResonCodeModel">
            <summary>
            This is analysis reason code code model.<br></br>
            분석사유 코드 모델입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.AnalysisResonCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.AnalysisResonCodeModel._CODE_ANALYSISREASONCODE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.AnalysisResonCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.AnalysisResonCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.AnalysisResonCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.AnalysisResonCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.AnalysisResonCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.AnalysisResonCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.AnalysisResonCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.CheckInCodeCodeModel">
            <summary>
            This is area check in code model.<br></br>
            Check In 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CheckInCodeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CheckInCodeCodeModel._CODE_CHECKINCODE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.CheckInCodeCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CheckInCodeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자
            </summary>
        </member>
        <member name="P:TAP.Models.Code.CheckInCodeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CheckInCodeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.CheckInCodeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.CheckInCodeCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.CheckInCodeCodeModel.Copy">
            <summary>
            This method makes copy of this model<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.DefectCodeModel">
            <summary>
            This is area defect model.<br></br>
            Defect 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.DefectCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.DefectCodeModel._CODE_DEFECT">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.DefectCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.DefectCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자
            </summary>
        </member>
        <member name="P:TAP.Models.Code.DefectCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.DefectCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.DefectCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.DefectCodeModel.#ctor(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="defectType">Main operation</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.DefectCodeModel.CreateInstance(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="defectType">Main operation</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.DefectCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.DefectLevelCodeModel">
            <summary>
            This is revision code model.<br></br>
            /리비전 코드 모델입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.DefectLevelCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.DefectLevelCodeModel._CODE_DEFECTLEVEL">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.DefectLevelCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.DefectLevelCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.DefectLevelCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.DefectLevelCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.DefectLevelCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.DefectLevelCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.DefectLevelCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.DefectSizeCodeModel">
            <summary>
            This is defect size code model.<br></br>
            /Defect 크기 코드 모델입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.DefectSizeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.DefectSizeCodeModel._CODE_DEFECTSIZE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.DefectSizeCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.DefectSizeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.DefectSizeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.DefectSizeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.DefectSizeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.DefectSizeCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.DefectSizeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.EquipmentGroupCodeModel">
            <summary>
            This is equipment group code model.<br></br>
            장비그룹 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.EquipmentGroupCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.EquipmentGroupCodeModel._CODE_EQUIPMENTGROUP">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.EquipmentGroupCodeModel.self">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.EquipmentGroupCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자
            </summary>
        </member>
        <member name="P:TAP.Models.Code.EquipmentGroupCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.EquipmentGroupCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.EquipmentGroupCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.EquipmentGroupCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.EquipmentGroupCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.EquipmentTypeCodeModel">
            <summary>
            This is equipment type code model.<br></br>
            장비타입 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.EquipmentTypeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.EquipmentTypeCodeModel._CODE_EQUIPMENTTYPE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.EquipmentTypeCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.EquipmentTypeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자
            </summary>
        </member>
        <member name="P:TAP.Models.Code.EquipmentTypeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.EquipmentTypeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.EquipmentTypeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.EquipmentTypeCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.EquipmentTypeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.GradeCodeModel">
            <summary>
            This is grade code model.<br></br>
            Grade 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.GradeCodeModel._XPATH">
            <summary>
            코드의 XPath입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.GradeCodeModel._CODE_GRADE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.GradeCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.GradeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.GradeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.GradeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다
            </summary>
        </member>
        <member name="M:TAP.Models.Code.GradeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.GradeCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.GradeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.InterlockCodeModel">
            <summary>
            This is interlock code model.<br></br>
            Interlock 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.InterlockCodeModel._XPATH">
            <summary>
            코드의 XPath입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.InterlockCodeModel._CODE_INTERLOCK">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.InterlockCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.InterlockCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.InterlockCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.InterlockCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.InterlockCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.InterlockCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.InterlockCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.LotCodeCodeModel">
            <summary>
            This is lot code code model.<br></br>
            Lot code 코드 모델입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.LotCodeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.LotCodeCodeModel._CODE_LOTCODE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.LotCodeCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.LotCodeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.LotCodeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.LotCodeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.LotCodeCodeModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="facility">Facility</param>
        </member>
        <member name="M:TAP.Models.Code.LotCodeCodeModel.#ctor(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="facility">Facility</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.LotCodeCodeModel.CreateInstance(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="facility">Facility</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.LotCodeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.NamingCodeModel">
            <summary>
            This is naming-rule code model.<br></br>
            네이밍룰 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.NamingCodeModel._XPATH">
            <summary>
            코드의 XPath입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.NamingCodeModel._CODE_NAMING">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.NamingCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.NamingCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.NamingCodeModel.Name">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.NamingCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.NamingCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only.</param>
        </member>
        <member name="M:TAP.Models.Code.NamingCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only.</param>
        </member>
        <member name="M:TAP.Models.Code.NamingCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.OperationCodeModel">
            <summary>
            This is operation code model.<br></br>
            오퍼레이션 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.OperationCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.OperationCodeModel._CODE_OPERATION">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.OperationCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.OperationCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자
            </summary>
        </member>
        <member name="P:TAP.Models.Code.OperationCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.OperationCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.OperationCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.OperationCodeModel.#ctor(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="mainOperation">Main operation</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.OperationCodeModel.CreateInstance(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="mainOperation">Main operation</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.OperationCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.ParameterCodeModel">
            <summary>
            This is parameter code model.<br></br>
            파라미터 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ParameterCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ParameterCodeModel._CODE_PARAMETER">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ParameterCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.ParameterCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.ParameterCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.ParameterCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.ParameterCodeModel.#ctor(System.String,System.String,System.String)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="lotCode">Lot code</param>
            <param name="mainOperation">Main operation</param>
            <param name="operation">Operation</param>
        </member>
        <member name="M:TAP.Models.Code.ParameterCodeModel.#ctor(System.String,System.String,System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="lotCode">Lot code</param>
            <param name="mainOperation">Main operation</param>
            <param name="operation">Operation</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.ParameterCodeModel.CreateInstance(System.String,System.String,System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="lotCode">Lot code</param>
            <param name="mainOperation">Main operation</param>
            <param name="operation">Operation</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.ParameterCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.PartCodeModel">
            <summary>
            This is part code model.<br></br>
            부품 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.PartCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.PartCodeModel._CODE_PART">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.PartCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.PartCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.PartCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.PartCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.PartCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.PartCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.PartCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.PartSubTypeCodeModel">
            <summary>
            This is part sub type code model.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.PartSubTypeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.PartSubTypeCodeModel._CODE_PARTSUBTYPE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.PartSubTypeCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.PartSubTypeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.PartSubTypeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.PartSubTypeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.PartSubTypeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.PartSubTypeCodeModel.#ctor(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="partType">Part type</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.PartSubTypeCodeModel.CreateInstance(System.String,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="partType">Part type</param>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.PartSubTypeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.PartTypeCodeModel">
            <summary>
            This is part type code model.<br></br>
            부품 타입 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.PartTypeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.PartTypeCodeModel._CODE_PARTTYPE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.PartTypeCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.PartTypeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.PartTypeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.PartTypeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.PartTypeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.PartTypeCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.PartTypeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.ProductDistinctionCodeModel">
            <summary>
            This is product distinction code model.<br></br>
            제품구분 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ProductDistinctionCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ProductDistinctionCodeModel._CODE_PRODUCTDISTINCTION">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ProductDistinctionCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.ProductDistinctionCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.ProductDistinctionCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.ProductDistinctionCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.ProductDistinctionCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.ProductDistinctionCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.ProductDistinctionCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.ProductGroupCodeModel">
            <summary>
            This is product group code model.<br></br>
            제품그룹 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ProductGroupCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ProductGroupCodeModel._CODE_PRODUCTGROUP">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ProductGroupCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.ProductGroupCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.ProductGroupCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.ProductGroupCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.ProductGroupCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.ProductGroupCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.ProductGroupCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.RecipeCodeModel">
            <summary>
            This is recipe code model.<br></br>
            레시피 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RecipeCodeModel._XPATH">
            <summary>
            모델의 XPath입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RecipeCodeModel._CODE_RECIPE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RecipeCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.RecipeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자
            </summary>
        </member>
        <member name="P:TAP.Models.Code.RecipeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.RecipeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.RecipeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only.</param>
        </member>
        <member name="M:TAP.Models.Code.RecipeCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.RecipeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.RegionCodeModel">
            <summary>
            This class is region code model.<br></br>
            지역 코드모델입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RegionCodeModel._XPATH">
            <summary>
            코드의 XPath입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RegionCodeModel._CODE_REGION">
            <summary>
            모델의 카테고리입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RegionCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.RegionCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자
            </summary>
        </member>
        <member name="P:TAP.Models.Code.RegionCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.RegionCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.RegionCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.RegionCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.RegionCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.RepairItemCodeModel">
            <summary>
            This is repair item code model.<br></br>
            /수리항목 코드 모델입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RepairItemCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RepairItemCodeModel._CODE_REPAIRITEM">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RepairItemCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.RepairItemCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.RepairItemCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.RepairItemCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.RepairItemCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.RepairItemCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.RepairItemCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.RevisionCodeCodeModel">
            <summary>
            This is revision code model.<br></br>
            /리비전 코드 모델입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RevisionCodeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RevisionCodeCodeModel._CODE_REVISIONCODE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.RevisionCodeCodeModel.self">
            <summary>
            Code model it self.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.Code.RevisionCodeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.RevisionCodeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.RevisionCodeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.RevisionCodeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.RevisionCodeCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.RevisionCodeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.ShiftCodeModel">
            <summary>
            This is shift code model.<br></br>
            Shift 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ShiftCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ShiftCodeModel._CODE_SHIFT">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.ShiftCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.ShiftCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.ShiftCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.ShiftCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.ShiftCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.ShiftCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.ShiftCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.StockGradeCodeModel">
            <summary>
            This is stock grade code model.
            </summary>
        </member>
        <member name="F:TAP.Models.Code.StockGradeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.StockGradeCodeModel._CODE_STOCKGRADE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.StockGradeCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.StockGradeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.StockGradeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.StockGradeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.StockGradeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.StockGradeCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.StockGradeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.UserDepartmentCodeModel">
            <summary>
            This is user department code model.<br></br>
            사용자 부서 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.UserDepartmentCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.UserDepartmentCodeModel._CODE_USERDEPARTMENT">
            <summary>
            Category of code model
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.UserDepartmentCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.UserDepartmentCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자 
            </summary>
        </member>
        <member name="P:TAP.Models.Code.UserDepartmentCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.UserDepartmentCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.UserDepartmentCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.UserDepartmentCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.UserDepartmentCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.UserPositionCodeModel">
            <summary>
            This is user position code model.<br></br>
            사용자 직위 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.UserPositionCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.UserPositionCodeModel._CODE_USERPOSITION">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.UserPositionCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.UserPositionCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자
            </summary>
        </member>
        <member name="P:TAP.Models.Code.UserPositionCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.UserPositionCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.UserPositionCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.UserPositionCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.UserPositionCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.Code.WorkOrderTypeCodeModel">
            <summary>
            This is work order type model.<br></br>
             워크오더 타입 코드 모델입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Code.WorkOrderTypeCodeModel._XPATH">
            <summary>
            XPath of code model
            </summary>
        </member>
        <member name="F:TAP.Models.Code.WorkOrderTypeCodeModel._CODE_WORKORDERTYPE">
            <summary>
            Category of code model<br></br>
            코드 모델 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Code.WorkOrderTypeCodeModel.self">
            <summary>
            Code model it self.
            </summary>
        </member>
        <member name="P:TAP.Models.Code.WorkOrderTypeCodeModel.Instance">
            <summary>
            Static accessor of Code<br></br>
            코드의 정적 접근자
            </summary>
        </member>
        <member name="P:TAP.Models.Code.WorkOrderTypeCodeModel.Name">
            <summary>
            Model name that guarantees identity<br></br>
            모델의 아이덴티티를 보장하는 이름
            </summary>
        </member>
        <member name="M:TAP.Models.Code.WorkOrderTypeCodeModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
        </member>
        <member name="M:TAP.Models.Code.WorkOrderTypeCodeModel.#ctor(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.WorkOrderTypeCodeModel.CreateInstance(TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="usedOnly">If set 'YES', this creator loads current codes only</param>
        </member>
        <member name="M:TAP.Models.Code.WorkOrderTypeCodeModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="T:TAP.Models.EnumEventFlag">
            <summary>
            This enumeratior is event flag.
            이벤트플래그 목록입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.EnumEventFlag.D">
            <summary>
            Default event
            기본 이벤트
            </summary>
        </member>
        <member name="F:TAP.Models.EnumEventFlag.N">
            <summary>
            Normal event
            정상 이벤트
            </summary>
        </member>
        <member name="F:TAP.Models.EnumEventFlag.S">
            <summary>
            Special event
            특별 이벤트
            </summary>
        </member>
        <member name="F:TAP.Models.EnumEventFlag.F">
            <summary>
            Error Event
            에러 이벤트
            </summary>
        </member>
        <member name="T:TAP.Models.EnumProductSourceDisinct">
            <summary>
            This enumeratior is distingushi flag for product source
            제품 원천정보를 구분하기 위한 목록입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.EnumProductSourceDisinct.PRODUCT">
            <summary>
            Own product
            자체생산
            </summary>
        </member>
        <member name="F:TAP.Models.EnumProductSourceDisinct.OEM">
            <summary>
            OEM
            OEN 생산
            </summary>
        </member>
        <member name="T:TAP.Models.EnumControlAuthority">
            <summary>
            This enumeratior is control authority list.
            컨트롤에 대한 권한 목록입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.EnumControlAuthority.ACCESS">
            <summary>
            Access
            접근가능
            </summary>
        </member>
        <member name="F:TAP.Models.EnumControlAuthority.SEARCH">
            <summary>
            Search
            검색가능
            </summary>
        </member>
        <member name="F:TAP.Models.EnumControlAuthority.MODIFY">
            <summary>
            Modify
            수정가능
            </summary>
        </member>
        <member name="F:TAP.Models.EnumControlAuthority.CREATE">
            <summary>
            Create
            생성가능
            </summary>
        </member>
        <member name="F:TAP.Models.EnumControlAuthority.SPECIAL">
            <summary>
            Special
            특수기능 가능
            </summary>
        </member>
        <member name="T:TAP.Models.EnumWarningMethod">
            <summary>
            This is list of warning method
            </summary>
        </member>
        <member name="F:TAP.Models.EnumWarningMethod.MAIL">
            <summary>
            Sending mail to warn
            </summary>
        </member>
        <member name="F:TAP.Models.EnumWarningMethod.SMS">
            <summary>
            Send sms to warn
            </summary>
        </member>
        <member name="F:TAP.Models.EnumWarningMethod.BOTH">
            <summary>
            Send main and SMS to warn
            </summary>
        </member>
        <member name="T:TAP.Models.EnumDBCommandMethod">
            <summary>
            This is list of DB command method
            </summary>
        </member>
        <member name="F:TAP.Models.EnumDBCommandMethod.TEXT">
            <summary>
            Text command
            </summary>
        </member>
        <member name="F:TAP.Models.EnumDBCommandMethod.MANAGED_PACKAGE">
            <summary>
            Package created by TAP
            </summary>
        </member>
        <member name="F:TAP.Models.EnumDBCommandMethod.PACKAGE">
            <summary>
            General package
            </summary>
        </member>
        <member name="F:TAP.Models.EnumDBCommandMethod.STORED_PROCEDURE">
            <summary>
            Stored procedure without package
            </summary>
        </member>
        <member name="T:TAP.Models.EnumSearhBaseTime">
            <summary>
            This is list of seraching time-base
            </summary>
        </member>
        <member name="F:TAP.Models.EnumSearhBaseTime.INSERT_TIME">
            <summary>
            Insert time
            </summary>
        </member>
        <member name="F:TAP.Models.EnumSearhBaseTime.UPDATE_TIME">
            <summary>
            Update time
            </summary>
        </member>
        <member name="F:TAP.Models.EnumSearhBaseTime.EVENT_TIME">
            <summary>
            Event time
            </summary>
        </member>
        <member name="T:TAP.Models.EnumMemberDataType">
            <summary>
            This is list of meber data type
            </summary>
        </member>
        <member name="F:TAP.Models.EnumMemberDataType.STRING">
            <summary>
            String type
            </summary>
        </member>
        <member name="F:TAP.Models.EnumMemberDataType.NUMERIC">
            <summary>
            Numeric Type
            </summary>
        </member>
        <member name="F:TAP.Models.EnumMemberDataType.DATETIME">
            <summary>
            DateTime type
            </summary>
        </member>
        <member name="F:TAP.Models.EnumMemberDataType.ENUM">
            <summary>
            Enumerator type
            </summary>
        </member>
        <member name="T:TAP.Models.UtilEnumDisplay">
            <summary>
            This is list of UI displaying types
            </summary>
        </member>
        <member name="F:TAP.Models.UtilEnumDisplay.Horizontal">
            <summary>
            Horizontal
            </summary>
        </member>
        <member name="F:TAP.Models.UtilEnumDisplay.Vertical">
            <summary>
            Vertical
            </summary>
        </member>
        <member name="T:TAP.Models.EnumModelCommand">
            <summary>
            This is list of common model command
            </summary>
        </member>
        <member name="F:TAP.Models.EnumModelCommand.CREATE">
            <summary>
            Create
            </summary>
        </member>
        <member name="F:TAP.Models.EnumModelCommand.MODIFY">
            <summary>
            Modify
            </summary>
        </member>
        <member name="F:TAP.Models.EnumModelCommand.DELETE">
            <summary>
            Delte
            </summary>
        </member>
        <member name="T:TAP.Models.EnumModelEvent">
            <summary>
            This is list of common model event
            </summary>
        </member>
        <member name="F:TAP.Models.EnumModelEvent._EVENT_CREATE">
            <summary>
            Create
            </summary>
        </member>
        <member name="F:TAP.Models.EnumModelEvent._EVENT_MODIFY">
            <summary>
            Modify
            </summary>
        </member>
        <member name="F:TAP.Models.EnumModelEvent._EVENT_DELETE">
            <summary>
            Delete
            </summary>
        </member>
        <member name="T:TAP.Models.IndependentModel">
            <summary>
            This model is base independent model.
            </summary>
        </member>
        <member name="P:TAP.Models.IndependentModel.DefaultInformation">
            <summary>
            Hierachical structure of basic info factory model
            </summary>
        </member>
        <member name="P:TAP.Models.IndependentModel.Region">
            <summary>
            Region level
            </summary>
        </member>
        <member name="P:TAP.Models.IndependentModel.Facility">
            <summary>
            Facility level
            </summary>
        </member>
        <member name="P:TAP.Models.IndependentModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="M:TAP.Models.IndependentModel.InitializeFields">
            <summary>
            This method initializes fields
            </summary>
        </member>
        <member name="M:TAP.Models.IndependentModel.ValidateDefaultInformation(System.Int32,System.Boolean)">
            <summary>
            This method validates Hierachy structure of model.
            </summary>
            <param name="level">Hierachy sequence</param>
            <param name="needtoCheckAll">If 'TRUE', this method checks value 'ALL'.</param>
        </member>
        <member name="M:TAP.Models.IndependentModel.IsDerivedFromIndependentModel">
            <summary>
            This method checks type that is derived from independent Model.
            </summary>
            <returns>If "TRUE", assigned type is derived from Independent Model.</returns>
        </member>
        <member name="M:TAP.Models.IndependentModel.SetName(System.String)">
            <summary>
            This method sets name of model
            </summary>
            <param name="name">Model name</param>
        </member>
        <member name="M:TAP.Models.IndependentModel.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method extracts name list of hierachical structure that is consist this model.
            </summary>
            <returns>Array includes name list of hierachical structure that is consist this model</returns>
        </member>
        <member name="M:TAP.Models.IndependentModel.MakeDefaultArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.IndependentModel.AssignArrayValues">
            <summary>
            This model does not have nest model.
            </summary>
        </member>
        <member name="M:TAP.Models.IndependentModel.MergeModel(TAP.Models.Model,System.String)">
            <summary>
            This model does not support this method.
            </summary>
            <param name="model"></param>
            <param name="updateUser"></param>
        </member>
        <member name="M:TAP.Models.IndependentModel.SplitModel(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            This model does not support this method.
            </summary>
            <param name="splitModelName"></param>
            <param name="nestModelNames"></param>
            <param name="updateUser"></param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.IndependentModel.MakeParentArgumentPack">
            <summary>
            This model does not support this method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.IndependentModel.AssignArrayValues(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.IndependentModel.CreateMailMessage(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.IndependentModel.LoadMailReceiverList(System.String)">
            <summary>
            This methods loads receiver list
            </summary>
            <param name="mailType">Mailing type</param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.IndependentModel.GetChangedLevel(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method get member that changed by changing default info event
            </summary>
            <param name="defaultInfo">Model defult Info.</param>
            <returns>Beggest level changed</returns>
        </member>
        <member name="M:TAP.Models.IndependentModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method is not supported.
            </summary>
            <param name="defaultInformation"></param>
            <param name="defaultData"></param>
            <param name="includeNestData"></param>
        </member>
        <member name="M:TAP.Models.IndependentModel.LoadBasicModel(System.Int32)">
            <summary>
            This method is not supported.
            </summary>
            <param name="modelLevel"></param>
        </member>
        <member name="M:TAP.Models.IndependentModel.CreateInstance(System.String)">
            <summary>
            This method creates instance of model
            </summary>
            <param name="name">Model name</param>
        </member>
        <member name="T:TAP.Models.IndependentModelSet">
            <summary>
            This is base of Independent model set
            </summary>
        </member>
        <member name="M:TAP.Models.IndependentModelSet.LoadModels(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="defaultInfo">Default info</param>
        </member>
        <member name="M:TAP.Models.IndependentModelSet.LoadModels(TAP.Models.ModelDefaultInfo,System.Int32)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="defaultInfo">Default info</param>
            <param name="level">Model level</param>
        </member>
        <member name="M:TAP.Models.IndependentModelSet.LoadModels(TAP.Models.ModelDefaultInfo,System.Int32,TAP.EnumFlagYN)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="defaultInfo">Default Info</param>
            <param name="level">Model level</param>
            <param name="includeNestData">If "YES", each models loads nest models.</param>
        </member>
        <member name="M:TAP.Models.IndependentModelSet.LoadModels(TAP.ArgumentPack,System.String)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
        </member>
        <member name="M:TAP.Models.IndependentModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="T:TAP.Models.IndependentDefaultInfo">
            <summary>
            This class is default info of Independent model
            </summary>
        </member>
        <member name="P:TAP.Models.IndependentDefaultInfo.Name">
            <summary>
            Identifaction level
            </summary>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.#ctor">
            <summary>
            This crates instance of this
            </summary>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.#ctor(System.Data.DataRow)">
            <summary>
            This creates instance of hierachical structure.
            </summary>
            <param name="defaultData">Hierachical structure data</param>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.Dispose">
            <summary>
            This dispoes instance of hierachical structure.
            </summary>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.CreateInstance(System.Data.DataRow)">
            <summary>
            This method initializes instance of hierachical structure.
            </summary>
            <param name="defaultData">Hierachy structure data</param>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.Copy">
            <summary>
            This method makes copy of hierachical structure.
            </summary>
            <returns>Copy of hierachical structure</returns>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            This method changes values of Default information members
            </summary>
            <param name="infoDictionary">New values</param>
            <param name="modelLevel">Level of current model</param>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            This method changes values of Default information members
            </summary>
            <param name="infoDictionary">New values</param>
            <param name="modelLevel">Level of current model</param>
            <param name="defaultInfoMembers">Default information members</param>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.GetCurrentDefaultInfo">
            <summary>
            This method extract default info string as dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.MakeArgumentPack">
            <summary>
            This method makes argument pack using hierachical structure.
            </summary>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.MakeArgumentPack(System.Int32,System.Boolean)">
            <summary>
             This method makes argument pack using default info.
             This method made argument pack contains identification argument.
            </summary>
            <param name="level">Level of current model.</param>
            <param name="isParent">If this argument set to false, This method return data for one model only.</param>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.GetMemberLevel(System.String)">
            <summary>
            This method get level of specified member;
            </summary>
            <param name="memberName">Level of specified member</param>
        </member>
        <member name="T:TAP.Models.IndependentDefaultInfo.HierarchicalDefaultInfo">
            <summary>
            Enumeratior of hierachical structure
            </summary>
        </member>
        <member name="F:TAP.Models.IndependentDefaultInfo.HierarchicalDefaultInfo.REGION">
            <summary>
            Region
            </summary>
        </member>
        <member name="F:TAP.Models.IndependentDefaultInfo.HierarchicalDefaultInfo.FACILITY">
            <summary>
            Facility
            </summary>
        </member>
        <member name="F:TAP.Models.IndependentDefaultInfo.HierarchicalDefaultInfo.NAME">
            <summary>
            Tech
            </summary>
        </member>
        <member name="M:TAP.Models.IndependentDefaultInfo.CreateXPath(System.Int32)">
            <summary>
            This is method is not supported
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="T:TAP.Models.Model">
            <summary>
            This model is base model of all models.
            </summary> 
        </member>
        <member name="F:TAP.Models.Model.ModelLevel">
            <summary>
            Model level of Hierachical structure
            </summary>
        </member>
        <member name="F:TAP.Models.Model.insertUser">
            <summary>
            User who set up model initially
            </summary>
        </member>
        <member name="F:TAP.Models.Model.updateUser">
            <summary>
            User who modified model lately
            </summary>
        </member>
        <member name="F:TAP.Models.Model.insertTime">
            <summary>
            Date and time when set up model initially
            </summary>
        </member>
        <member name="F:TAP.Models.Model.updateTime">
            <summary>
            Date and time when modified model lately
            </summary>
        </member>
        <member name="F:TAP.Models.Model.enumPack">
            <summary>
            ArgumentPack that saves enumeratior-typed model
            </summary>
        </member>
        <member name="F:TAP.Models.Model.name">
            <summary>
            Model name that guarantees identity
            </summary>
        </member>
        <member name="F:TAP.Models.Model.defaultTableName">
            <summary>
            Table name that saves model information
            </summary>
        </member>
        <member name="F:TAP.Models.Model.sequences">
            <summary>
            Sequence number in model set
            </summary>
        </member>
        <member name="F:TAP.Models.Model.hierachicalLevel">
            <summary>
            Hierachical level of model
            </summary>
        </member>
        <member name="F:TAP.Models.Model.lastOperation">
            <summary>
            Last operation of this model
            </summary>
        </member>
        <member name="F:TAP.Models.Model.dbCommunicator">
            <summary>
            Ojbect for communicating with database
            </summary>
        </member>
        <member name="F:TAP.Models.Model.includeNestData">
            <summary>
            If "YES", this model loads nest model when this model is created.
            </summary>
        </member>
        <member name="F:TAP.Models.Model.customHash">
            <summary>
            Hashtable that saves data of member that is added in customizing time
            </summary>
        </member>
        <member name="F:TAP.Models.Model.lastEventTimeKey">
            <summary>
            Time key of last event
            </summary>
        </member>
        <member name="F:TAP.Models.Model.lastEventComment">
            <summary>
            최근 of last event
            </summary>
        </member>
        <member name="F:TAP.Models.Model.lastEvent">
            <summary>
            Last evnet of model
            </summary>
        </member>
        <member name="F:TAP.Models.Model.lastEventFlag">
            <summary>
            Last evnet flag of model
            </summary>
        </member>
        <member name="F:TAP.Models.Model.isAlive">
            <summary>
            If "YES", this model is alive. If "NO", model is not exist.
            </summary>
        </member>
        <member name="F:TAP.Models.Model.bindData">
            <summary>
            If "YES", data of this model was binded.
            </summary>
        </member>
        <member name="F:TAP.Models.Model.modelData">
            <summary>
            Data rows of this model
            </summary>
        </member>
        <member name="F:TAP.Models.Model.lastEventTime">
            <summary>
            Last event time
            </summary>
        </member>
        <member name="F:TAP.Models.Model.lastEventCode">
            <summary>
            Last Event code
            </summary>
        </member>
        <member name="F:TAP.Models.Model.lastJobCode">
            <summary>
            Last job name
            </summary>
        </member>
        <member name="F:TAP.Models.Model.defaultInformation">
            <summary>
            Hierachical information of model
            </summary>
        </member>
        <member name="F:TAP.Models.Model.sourceDistingush">
            <summary>
            Source distingush
            </summary>
        </member>
        <member name="F:TAP.Models.Model._modelLog">
            <summary>
            Model Log
            </summary>
        </member>
        <member name="F:TAP.Models.Model._chagedDefaultInfoLevel">
            <summary>
            Default info level when default info changed
            </summary>
        </member>
        <member name="F:TAP.Models.Model._isAutoBind">
            <summary>
            If 'TRUE', model-data binded by TAP.
            </summary>
        </member>
        <member name="P:TAP.Models.Model.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.Model.InsertUser">
            <summary>
            User who has set this model at first
            </summary>
        </member>
        <member name="P:TAP.Models.Model.UpdateUser">
            <summary>
            User who has modified model lastly
            </summary>
        </member>
        <member name="P:TAP.Models.Model.Sequences">
            <summary>
            Sequence in model set
            </summary>
        </member>
        <member name="P:TAP.Models.Model.InsertTime">
            <summary>
            Time when model has been set at first
            </summary>
        </member>
        <member name="P:TAP.Models.Model.UpdateTime">
            <summary>
            Time when model has been modified lastly
            </summary>
        </member>
        <member name="P:TAP.Models.Model.CustomHash">
            <summary>
            Member list that was customized
            </summary>
        </member>
        <member name="P:TAP.Models.Model.LastEventComment">
            <summary>
            Comment of last event
            </summary>
        </member>
        <member name="P:TAP.Models.Model.LastEventTimeKey">
            <summary>
            Time key of last event
            </summary>
        </member>
        <member name="P:TAP.Models.Model.LastEvent">
            <summary>
            Last evnet of model
            </summary>
        </member>
        <member name="P:TAP.Models.Model.LastEventFlag">
            <summary>
            Last evnet flag of model
            </summary>
        </member>
        <member name="P:TAP.Models.Model.LastEventTime">
            <summary>
            Last event time
            </summary>
        </member>
        <member name="P:TAP.Models.Model.LastEventCode">
            <summary>
            Last Event code
            </summary>
        </member>
        <member name="P:TAP.Models.Model.LastJobCode">
            <summary>
            Last Job name
            </summary>
        </member>
        <member name="P:TAP.Models.Model.SourceDistingush">
            <summary>
            Source distingush
            </summary>
        </member>
        <member name="P:TAP.Models.Model.IsAlive">
            <summary>
            If this member set to 'YES', model is alive
            </summary>
        </member>
        <member name="P:TAP.Models.Model.BindData">
            <summary>
            If this member set to 'YES', model includes valid data
            </summary>
        </member>
        <member name="P:TAP.Models.Model.ModelLevels">
            <summary>
            Model level of hierachical structure
            </summary>
        </member>
        <member name="P:TAP.Models.Model.ChangedDefaultInfoLevel">
            <summary>
            Default info level when default info changed
            </summary>
        </member>
        <member name="M:TAP.Models.Model.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of model
            </summary>
            <param name="defaultInformation">Default information</param>
            <param name="defaultData">Model data</param>
            <param name="includeNestData">If 'YES', this instance inculdes nest model</param>
        </member>
        <member name="M:TAP.Models.Model.CreateInstance(System.String)">
            <summary>
            This method creates instance of model
            </summary>
            <param name="name">Model name</param>
        </member>
        <member name="M:TAP.Models.Model.MakeDefaultArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.Model.MakeParentArgumentPack">
            <summary>
            This method makes Argumentpack for loading nest model data of current model.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.Model.MergeModel(TAP.Models.Model,System.String)">
            <summary>
            This model merges nest models.
            </summary>
            <param name="model">Model</param>
            <param name="updateUser">User</param>
        </member>
        <member name="M:TAP.Models.Model.SplitModel(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            This model splits nest models.
            </summary>
            <param name="splitModelName">Model for splitting</param>
            <param name="nestModelNames">Nest model name list that splits </param>
            <param name="updateUser">Users</param>
            <returns>Splitted model</returns>
        </member>
        <member name="M:TAP.Models.Model.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.Model.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method extracts name list of hierachical structure that is consist this model.
            </summary>
            <returns>Array includes name list of hierachical structure that is consist this model</returns>
        </member>
        <member name="M:TAP.Models.Model.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.Model.AssignArrayValues(System.String)">
            <summary>
            This method assings specified data to nest models.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.Model.CreateMailMessage(System.String)">
            <summary>
            This method creates mail message
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Model.LoadMailReceiverList(System.String)">
            <summary>
            This methods loads receiver list
            </summary>
            <param name="mailType">Mailing type</param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads model history data. 
            </summary>
            <param name="arguments">Argument list</param>
            <returns>Model Array</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadBasicModel(System.Int32)">
            <summary>
            This methods loads basic model
            </summary>
            <returns>System basic model</returns>
        </member>
        <member name="M:TAP.Models.Model.GetChangedLevel(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method get member that changed by changing default info event
            </summary>
            <param name="defaultInfo">Model defult Info.</param>
            <returns>Beggest level changed</returns>
        </member>
        <member name="M:TAP.Models.Model.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.Model.System#IDisposable#Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.Model.Initialize">
            <summary>
            This method assign values to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.Model.Initialize(System.Data.DataRow)">
            <summary>
            This method initialize model.
            </summary>
            <param name="rowData">Model data</param>
        </member>
        <member name="M:TAP.Models.Model.Initialize(System.Data.DataRow[])">
            <summary>
            This method initialize model.
            </summary>
            <param name="rowData">Model data</param>
        </member>
        <member name="M:TAP.Models.Model.AssignModelData(System.Data.DataRow)">
            <summary>
            This method assigns value to member of model using one data row.
            </summary>
            <param name="dataRow">Model data</param>
        </member>
        <member name="M:TAP.Models.Model.AssignModelData(System.Data.DataRow[])">
            <summary>
            This method assigns value to member of model using multiple rows.
            </summary>
            <param name="dataRow">Model data</param>
        </member>
        <member name="M:TAP.Models.Model.AssignVecticalModelData(System.Data.DataRow[])">
            <summary>
            This method makes Key-Value typed model information.
            </summary>
            <param name="argRow">Model data</param>
        </member>
        <member name="M:TAP.Models.Model.AssignHorizontalModelData(System.Data.DataRow)">
            <summary>
            This method makes "NOT" key-value typed model information.
            </summary>
            <param name="argRow">Model data</param>
        </member>
        <member name="M:TAP.Models.Model.AssignHorizontalModelData(TAP.ArgumentPack)">
            <summary>
            This method makes "NOT" key-value typed model information.
            </summary>
            <param name="argument">Model data</param>
        </member>
        <member name="M:TAP.Models.Model.ConvertDataType(System.Type,System.String)">
            <summary>
            멤버의 값을 프로퍼티 타입으로 컨버트 합니다. 
            </summary>
            <param name="argType">프로퍼티 타입</param>
            <param name="argValue">값</param>
            <returns>Object 객체</returns>
        </member>
        <member name="M:TAP.Models.Model.SaveLog(System.String,System.String,System.String)">
            <summary>
            This method saves log
            </summary>
            <param name="logType">Log type</param>
            <param name="name">Model Name</param>
            <param name="mesage">Error Message</param>
        </member>
        <member name="M:TAP.Models.Model.SaveLog(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            This method saves log
            </summary>
            <param name="logType">Log type</param>
            <param name="name">Model Name</param>
            <param name="mesage">Error Message</param>
        </member>
        <member name="M:TAP.Models.Model.GetAttributes">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Attribute Collection</returns>
        </member>
        <member name="M:TAP.Models.Model.GetClassName">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Class name</returns>
        </member>
        <member name="M:TAP.Models.Model.GetComponentName">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Component name</returns>
        </member>
        <member name="M:TAP.Models.Model.GetConverter">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Type Converter</returns>
        </member>
        <member name="M:TAP.Models.Model.GetDefaultEvent">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Default event</returns>
        </member>
        <member name="M:TAP.Models.Model.GetDefaultProperty">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Default properties</returns>
        </member>
        <member name="M:TAP.Models.Model.GetEditor(System.Type)">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <param name="editorBaseType"></param>
            <returns>Default editor</returns>
        </member>
        <member name="M:TAP.Models.Model.GetEvents(System.Attribute[])">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <param name="attributes"></param>
            <returns>Event collection</returns>
        </member>
        <member name="M:TAP.Models.Model.GetEvents">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Event collection</returns>
        </member>
        <member name="M:TAP.Models.Model.GetProperties(System.Attribute[])">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <param name="attributes"></param>
            <returns>Prpperty collection</returns>
        </member>
        <member name="M:TAP.Models.Model.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <param name="pd"></param>
            <returns>This instance</returns>
        </member>
        <member name="M:TAP.Models.Model.GetProperties">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Property collection of this instance</returns>
        </member>
        <member name="M:TAP.Models.Model.ChangeNestModelDefaultInfo(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method changes hierachical structure of nest models.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeNestModelDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.String)">
            <summary>
            This method changes hierachical structure of nest models.
            </summary>
            <param name="defaultModelInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeNestModelDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method changes hierachical structure of nest models.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeNestModelDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method changes hierachical structure of nest models.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Job name</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeNestModelDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of nest models.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Event comment</param>
            <param name="command">Command</param>
            <param name="mainOperation">Main operation</param>
            <param name="operation">Opertaion</param>
            <param name="step">Step</param>
            <param name="status">Status</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo)">
            <summary>
            This model changes hierachical structure of this models
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.String)">
            <summary>
            This model changes hierachical structure of this models
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This model changes hierachical structure of this models
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This model changes hierachical structure of this models
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This model changes hierachical structure of this models
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Job code</param>
            <param name="mainOperation">Main operation</param>
            <param name="operation">Opertaion</param>
            <param name="step">Last step</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This model changes hierachical structure of this models
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Job code</param>
            <param name="mainOperation">Main operation</param>
            <param name="operation">Opertaion</param>
            <param name="step">Last step</param>
            <param name="status">Last step</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeModelLastEvent(System.String,TAP.Models.EnumEventFlag,System.String,System.String)">
            <summary>
            This method change last event of this and nest models.
            </summary>
            <param name="events">Conetents of event</param>
            <param name="eventFlag">Event Type</param>
            <param name="eventComment">Comment of event</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeModelLastEvent(System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method change last event of this and nest models.
            </summary>
            <param name="events">Conetents of event</param>
            <param name="eventFlag">Event Type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comment of event</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeModelLastEvent(System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method change last event of this and nest models.
            </summary>
            <param name="events">Conetents of event</param>
            <param name="eventFlag">Event Type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comment of event</param>
            <param name="mainOperation">Last main operation</param>
            <param name="operation">Last operation</param>
            <param name="command">Command</param>
            <param name="step">Last step</param>
            <param name="status">Status</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeOneModelLastEvent(System.String,TAP.Models.EnumEventFlag,System.String,System.String)">
            <summary>
            This method change last event of this and nest models.
            </summary>
            <param name="events">Conetents of event</param>
            <param name="eventFlag">Event Type</param>
            <param name="eventComment">Comment of event</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeOneModelLastEvent(System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method change last event of this and nest models.
            </summary>
            <param name="events">Conetents of event</param>
            <param name="eventFlag">Event Type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comment of event</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.ChangeOneModelLastEvent(System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method change last event of this and nest models.
            </summary>
            <param name="events">Conetents of event</param>
            <param name="eventFlag">Event Type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comment of event</param>
            <param name="mainOperation">Last main operation</param>
            <param name="operation">Last operation</param>
            <param name="command">Command</param>
            <param name="step">Last step</param>
            <param name="status">Status</param>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_TYPE">
            <summary>
            Query type argument name
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTSUFFIX_START">
            <summary>
            Prefix of argment for time-base querying
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_REGION">
            <summary>
            Argument name of Region
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_FACILITY">
            <summary>
            Argument name of Facility
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_USED">
            <summary>
            Argument name of "USE OR NOT"
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_UPDATEUSER">
            <summary>
            Argument name of updated user
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_INSERTUSER">
            <summary>
            Argument name of inserted user
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTVALUE_YES">
            <summary>
            Argument value of "YES"
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTVALUE_NO">
            <summary>
            Argument value of "NO"
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTVALUE_Y">
            <summary>
            Argument value of "Y"
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTVALUE_N">
            <summary>
            Argument value of "N"
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTVALUE_ALL">
            <summary>
            Default argument value("ALL")
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTVALUE_NA">
            <summary>
            No value("N/A")
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTVALUE_ANY">
            <summary>
            Any value
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_IDENTIFICATION">
            <summary>
            Argument name that guarantees identity
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_USER">
            <summary>
            Argument name of user
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_UPDATETIME">
            <summary>
            Argument name of updated time
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_INSERTTIME">
            <summary>
            Argument name of inserted time
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_PARENT">
            <summary>
            Argument name of parent model
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTVALUE_LOCAL_TYPE">
            <summary>
            Argument value of customizing query type
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_LASTEVENT">
            <summary>
            Argument key of last event
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_LASTEVENTTIME">
            <summary>
            Argument name of last event
            Argument key of last event time
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_MODELLEVEL">
            <summary>
            Model level
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_ISALIVE">
            <summary>
            Is Alive
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTPREFIX_CURRENT">
            <summary>
            Argument prefix of current
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTPREFIX_LAST">
            <summary>
            Argument prefix of last
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTPREFIX_NEXT">
            <summary>
            Argument prefix of next
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_INCLUDE_NESTMODEL">
            <summary>
            Argument key of include nest model
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_DESCRIPTION">
            <summary>
            Argument key of description 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._ARGUMENTKEY_CHANGEDDEFAULTINFOLEVEL">
            <summary>
            Argument key of changed default info
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_KEY">
            <summary>
            Column name of Key
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_VALUE">
            <summary>
            Column name of Value
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_DESCRIOTION">
            <summary>
            Column name of description
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_SEQUENCE">
            <summary>
            Column name of sequences
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_IDENTIFICATION">
            <summary>
            Column name of identificator
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_INSERTUSER">
            <summary>
            Column name of inseted user
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_UPDATEUSER">
            <summary>
            Column name of updated user
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_INSERTTIME">
            <summary>
            Date and time when inserted
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_UPDATETIME">
            <summary>
            Date and time when updated
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_REGION">
            <summary>
            Column name of region
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_FACILITY">
            <summary>
            Column name of facility
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMLN_NAME_LASTEVENT">
            <summary>
            Column name of last event
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_LASTEVENTTIME">
            <summary>
            Column name of last event time
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_LASTEVENTTIMEKEY">
            <summary>
            Columln name of last event time key
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_INCLUDE_NESTMODEL">
            <summary>
            Columln name key of include nest model
            </summary>
        </member>
        <member name="F:TAP.Models.Model._COLUMN_NAME_DESCRIPTION">
            <summary>
             Columln name of description 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._BASE_MODEL_SELECT_PACKAGE_NAME">
            <summary>
            Package name that loads basic information data
            기준정보 데이터를 로드하는 패키지의 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._BASE_MODEL_MODIFY_PACKAGE_NAME">
            <summary>
            Package name that modifies basic information data
            기준정보 데이터를 수정하는 패키지의 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._DATA_MODEL_SELECT_PACKAGE_NAME">
            <summary>
            Package name that loads business data
            비즈니스 데이터를 로드하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._DATA_MODEL_MODIFY_PACKAGE_NAME">
            <summary>
             Package name that modifies business data
            비즈니스 데이터를 수정하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._CODE_MODEL_SELECT_PACKAGE_NAME">
            <summary>
            Package name that loads code data
            시스템 코드정보를 로드하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._CODE_MODEL_MODIFY_PACKAGE_NAME">
            <summary>
             Package name that modifies code data
            시스템 코드 정보를 수정하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._USER_MODEL_SELECT_PACKAGE_NAME">
            <summary>
            Package name that loads user data
            사용자 정보를 로드하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._USER_MODEL_MODIFY_PACKAGE_NAME">
            <summary>
             Package name that modifies user data
            사용자 정보를 수정하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._SYSTEM_MODEL_SELECT_PACKAGE_NAME">
            <summary>
            Package name that loads system data
            시스템 정보를 로드하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._SYSTEM_MODEL_MODIFY_PACKAGE_NAME">
            <summary>
             Package name that modifies system data
            시스템 정보를 수정하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._FGMS_MODEL_SELECT_PACKAGE_NAME">
            <summary>
            Package name that loads stock data
            창고정보를 로드하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._FGMS_MODEL_MODIFY_PACKAGE_NAME">
            <summary>
             Package name that modifies stock data
            창고정보를 수정하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._FACILITY_MODEL_SELECT_PACKAGE_NAME">
            <summary>
            Package name that loads facility data
            Faciility 정보를 로드하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._FACILITY_MODEL_MODIFY_PACKAGE_NAME">
            <summary>
             Package name that modifies facility data
            Facility 정보를 수정하는 패키지 이름
            </summary>
        </member>
        <member name="F:TAP.Models.Model._BASE_TABLE_PREFIX_TABLE">
            <summary>
            Prefix of basic info model table name
            기준정보 모델 테이블 접두어
            </summary>
        </member>
        <member name="F:TAP.Models.Model._DATA_TABLE_PREFIX_TABLE">
            <summary>
            Prefix of business model table name
            비즈니스 모델 테이블 접두어
            </summary>
        </member>
        <member name="F:TAP.Models.Model._CODE_TABLE_PREFIX_TABLE">
            <summary>
            Prefix of code model table name
            시스템 코드모델 테이블 접두어
            </summary>
        </member>
        <member name="F:TAP.Models.Model._USER_TABLE_PREFIX_TABLE">
            <summary>
            Prefix of user model table name
            사용자 모델 테이블 접두어
            </summary>
        </member>
        <member name="F:TAP.Models.Model._SYSTEM_TABLE_PREFIX_TABLE">
            <summary>
            Prefix of system model table name
            시스템 모델 테이블 접두어
            </summary>
        </member>
        <member name="F:TAP.Models.Model._FGMS_TABLE_PREFIX_TABLE">
            <summary>
            Prefix of stock model table name
            창고모델 테이블 접두어
            </summary>
        </member>
        <member name="F:TAP.Models.Model._FACILITY_TABLE_PREFIX_TABLE">
            <summary>
            Prefix of facility model table name
            Facility 모델 테이블 접두어
            </summary>
        </member>
        <member name="F:TAP.Models.Model._REGION_SEQUENCE">
            <summary>
            Sequence of region level
            지역계층 시퀀스입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.Model._FACILITY_SEQUENCE">
            <summary>
            Sequence of facility level
            시설계층 시퀀스입니다. 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_HIERACHICAL_STRUCTURE">
            <summary>
            Hierachical structure member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_USER_INFO">
            <summary>
            User Information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_INTERNAL_INFO">
            <summary>
            Internal Information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_TIME_INFO">
            <summary>
            Time Information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_EVENT_INFO">
            <summary>
            Event Information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_NEST_MODEL">
            <summary>
            Nest model member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_REFERENCE_MODEL">
            <summary>
            Reference model member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_IDENTITY">
            <summary>
            Identity information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_BIZ_G">
            <summary>
            BIZ General Information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_BIZ_A">
            <summary>
            BIZ Alternative Information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_BIZ_N">
            <summary>
            BIZ Numeric Information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_BIZ_S">
            <summary>
            BIZ Selection type Information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBER_CATEGORY_BIZ_D">
            <summary>
            BIZ Descriable Information member categaory 
            </summary>
        </member>
        <member name="F:TAP.Models.Model._EVENT_MODEL_CREATED">
            <summary>
            First event of model instance
            </summary>
        </member>
        <member name="F:TAP.Models.Model._JOB_MODEL_CREATE">
            <summary>
            First job of model instance
            </summary>
        </member>
        <member name="F:TAP.Models.Model._EVENT_MODEL_DISPOSED">
            <summary>
            Last event of model instance
            </summary>
        </member>
        <member name="F:TAP.Models.Model._JOB_MODEL_DISPOSE">
            <summary>
            Last job of model instance
            </summary>
        </member>
        <member name="F:TAP.Models.Model._EVENT_MODEL_NORMAL_CHANAGED">
            <summary>
            Normal chaging event of model instance
            </summary>
        </member>
        <member name="F:TAP.Models.Model._JOB_MODEL_NORMAL_CHANAGE">
            <summary>
            Normal chaging job of model instance
            </summary>
        </member>
        <member name="F:TAP.Models.Model._EVENT_MODEL_NORMAL_UPDATED">
            <summary>
            Normal updating event of model instance
            </summary>
        </member>
        <member name="F:TAP.Models.Model._JOB_MODEL_NORMAL_UPDATE">
            <summary>
            Normal updating job of model instance
            </summary>
        </member>
        <member name="F:TAP.Models.Model._MEMBERS">
            <summary>
            Member categorymod
            멤버 카테고리
            </summary>
        </member>
        <member name="F:TAP.Models.Model._QUERYTYPE_SINGLE_MODEL">
            <summary>
            Querty type for single model data
            </summary>
        </member>
        <member name="F:TAP.Models.Model._QUERYTYPE_MULTIPLE_MODEL">
            <summary>
            Querty type for multiple model data(PARENT query type)
            </summary>
        </member>
        <member name="F:TAP.Models.Model._QUERYTYPE_PARENT_MODEL">
            <summary>
            Querty type for parent model data
            </summary>
        </member>
        <member name="M:TAP.Models.Model.Delete(System.String,TAP.EnumFlagYN)">
            <summary>
            This method deletes model.
            </summary>
            <param name="deleteUser">User</param>
            <param name="modifyingLastEvent">If 'YES', this method saves last event only</param>
        </member>
        <member name="M:TAP.Models.Model.Delete(System.String)">
            <summary>
            This method deletes model.
            </summary>
            <param name="deleteUser">User</param>
        </member>
        <member name="M:TAP.Models.Model.Delete(System.String,System.String,TAP.Models.EnumEventFlag)">
            <summary>
            This method deletes model.
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Event name</param>
            <param name="eventFlag">Event type</param>
        </member>
        <member name="M:TAP.Models.Model.Delete(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method deletes model.
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Event name</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="command">Last job code</param>
        </member>
        <member name="M:TAP.Models.Model.Delete(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method deletes model.
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Event name</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="lastEventComment">Comments of event</param>
            <param name="command">Last job code</param>
        </member>
        <member name="M:TAP.Models.Model.Delete(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method deletes model.
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Event name</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comments of event</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Corresponding main operation</param>
            <param name="operation">Corresponding operation</param>
            <param name="step">Step</param>
            <param name="status">Status</param>
        </member>
        <member name="M:TAP.Models.Model.DeleteModelData(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method makes arguemt packs for delete
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Event name</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comments of event</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Corresponding main operation</param>
            <param name="operation">Corresponding operation</param>
            <param name="step">Step</param>
            <param name="status">Status</param>
        </member>
        <member name="M:TAP.Models.Model.DeleteNestModel(System.String)">
            <summary>
            This method makes arguemt packs for delete
            </summary>
            <param name="deleteUser">User</param>
        </member>
        <member name="M:TAP.Models.Model.DeleteNestModel(System.String,System.String,TAP.Models.EnumEventFlag)">
            <summary>
            This method makes arguemt packs for delete
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Contents of event</param>
            <param name="eventFlag">Event type</param>
        </member>
        <member name="M:TAP.Models.Model.DeleteNestModel(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method makes arguemt packs for delete
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="command">Last job code</param>
        </member>
        <member name="M:TAP.Models.Model.DeleteNestModel(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method makes arguemt packs for delete
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="eventComment">Comments of event</param>
            <param name="command">Last job code</param>
        </member>
        <member name="M:TAP.Models.Model.DeleteNestModel(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method delets this model
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="eventComment">Comments of event</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Corresponding main operation</param>
            <param name="operation">Corresponding operation</param>
            <param name="step">Step</param>
            <param name="status">Status</param>
        </member>
        <member name="M:TAP.Models.Model.DeleteNestModelData(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method makes arguemt packs for delete
            </summary>
            <param name="deleteUser">User</param>
            <param name="events">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="eventComment">Comments of event</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Corresponding main operation</param>
            <param name="operation">Corresponding operation</param>
            <param name="step">Step</param>
            <param name="status">Status</param>
        </member>
        <member name="M:TAP.Models.Model.SaveModelData(System.String)">
            <summary>
            This method makes argument list for saving.
            </summary>
            <param name="updateUser">User</param>
            <returns>ArgumentPack</returns>
        </member>
        <member name="M:TAP.Models.Model.MakeHorizontalModelArgumentPack(System.String)">
            <summary>
            This method makes argument list for saving.
            </summary>
            <param name="updateUser">User</param>
            <returns>ArgumentPack</returns>
        </member>
        <member name="M:TAP.Models.Model.SaveNestModel(TAP.Models.ModelSet,System.String)">
            <summary>
            This method makes argument list of assigned model set.
            </summary>
            <param name="modelSet">Model set</param>
            <param name="updateUser">User</param>
            <returns>ArgumentPack array</returns>
        </member>
        <member name="M:TAP.Models.Model.SaveModelData(System.Collections.Generic.List{TAP.ArgumentPack})">
            <summary>
            This method saves model data to database.
            </summary>
            <param name="savePack">Argument list for saving</param>
            <returns>Number of rows applied</returns>
        </member>
        <member name="M:TAP.Models.Model.SaveNestData(System.String)">
            <summary>
            This method  makes ArgumentPack for saving this model data
            </summary>
            <param name="updateUser">User</param>
            <returns>ArgumentPack for saving</returns>
        </member>
        <member name="M:TAP.Models.Model.Save(System.String)">
            <summary>
            This method saves model and nest data.
            </summary>
            <param name="updateUser">User</param>
            <returns>Quantity of updated rows.</returns>
        </member>
        <member name="M:TAP.Models.Model.Save(System.String,TAP.EnumFlagYN)">
            <summary>
            This method saves model and nest model data.
            </summary>
            <param name="updateUser">User</param>
            <param name="modifyingLastEvent">If 'YES', this method saves last event only</param>
        </member>
        <member name="M:TAP.Models.Model.Save(System.String,System.String,TAP.Models.EnumEventFlag)">
            <summary>
            This method saves model and nest model data.
            </summary>
            <param name="updateUser">User</param>
            <param name="lastEvent">Event name</param>
            <param name="eventFlag">Event type</param>
        </member>
        <member name="M:TAP.Models.Model.Save(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method saves model and nest model data.
            </summary>
            <param name="updateUser">User</param>
            <param name="events">Event name</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.Save(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method saves model and nest model data.
            </summary>
            <param name="updateUser">User</param>
            <param name="events">Event name</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comments of event</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.Model.Save(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method saves model and nest model data.
            </summary>
            <param name="updateUser">User</param>
            <param name="events">Event name</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comments of event</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Corresponding main operation</param>
            <param name="operation">Corresponding operation</param>
            <param name="step">Last step</param>
            <param name="status">Status</param>
        </member>
        <member name="M:TAP.Models.Model.CreateSelectSql(System.Boolean,System.Boolean,TAP.ArgumentPack,System.String)">
            <summary>
            This method creates sql for 'SELECT'.
            </summary>
            <param name="argParents">If TRUE, method creates 'Parent Sql'</param>
            <param name="isHistory">If TRUE, method creates 'History table Sql'</param>
            <param name="argument">Arguemnt list</param>
            <param name="tableName">Table name</param>
            <returns>SQL sentence</returns>
        </member>
        <member name="M:TAP.Models.Model.CreateSelectSql(System.Boolean,System.Boolean,TAP.ArgumentPack,System.String,System.Boolean)">
            <summary>
            This method creates sql for 'SELECT'.
            </summary>
            <param name="argParents">If TRUE, method creates 'Parent Sql'</param>
            <param name="isHistory">If TRUE, method creates 'History table Sql'</param>
            <param name="argument">Arguemnt list</param>
            <param name="tableName">Table name</param>
            <param name="isHierachicalOnly">If TRUE, method uses hierachical structure information only when makes "WHERE" statements.</param>
            <returns>SQL sentence</returns>
        </member>
        <member name="M:TAP.Models.Model.CreateSelectSql(System.Boolean,System.Boolean,TAP.ArgumentPack,System.String,System.Boolean,System.Boolean)">
            <summary>
            This method creates sql for 'SELECT'.
            </summary>
            <param name="argParents">If TRUE, method creates 'Parent Sql'</param>
            <param name="isHistory">If TRUE, method creates 'History table Sql'</param>
            <param name="argument">Arguemnt list</param>
            <param name="tableName">Table name</param>
            <param name="isHierachicalOnly">If TRUE, method uses hierachical structure information only when makes "WHERE" statements.</param>
            <param name="aliveOnly">If "TRUE", sql loads Alived data only.</param>
            <returns>SQL sentence</returns>
        </member>
        <member name="M:TAP.Models.Model.CreateInsertSql(TAP.ArgumentPack,System.Boolean)">
            <summary>
             This method creates sql for 'INSERT'
            </summary>
            <param name="argument">Arguemnt list</param>
            <param name="isHistory">If TRUE, method creates 'History table INSERT statement'</param>
            <returns>INSERT statement</returns>
        </member>
        <member name="M:TAP.Models.Model.CreateUpdateSql(TAP.ArgumentPack,System.Boolean)">
            <summary>
             This method creates sql for 'UPDATE'
            </summary>
            <param name="argument">Arguemnt list</param>
            <param name="isHistory">If TRUE, method creates 'History table UPDATE statement'</param>
            <returns>UPDATE statement</returns>
        </member>
        <member name="M:TAP.Models.Model.CreateDeleteSql(TAP.ArgumentPack,System.Boolean)">
            <summary>
             This method creates sql for 'DELETE'
            </summary>
            <param name="argument">Arguemnt</param>
            <param name="isHistory">If TRUE, method creates 'History table DELETE statement'</param>
            <returns>DELETE statement</returns>
        </member>
        <member name="M:TAP.Models.Model.CreateWhere(System.Text.StringBuilder@,TAP.ArgumentPack,System.Int32,System.Boolean,System.String,System.Boolean)">
            <summary>
            This method creates 'WHERE' sentences.
            </summary>
            <param name="sb">StringBuilder includes sql sentence</param>
            <param name="argument">Arguemnt list</param>
            <param name="level">Level of model</param>
            <param name="isParent">If TRUE, method creates 'Parent Sql'</param>
            <param name="tableName">Table name</param>
            <param name="aliveOnly">If "TRUE", sql loads Alived data only.</param>
        </member>
        <member name="M:TAP.Models.Model.CreateWhere(System.Text.StringBuilder@,TAP.ArgumentPack,System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <summary>
            This method creates 'WHERE' sentences.
            </summary>
            <param name="sb">StringBuilder includes sql sentence</param>
            <param name="argument">Arguemnt list</param>
            <param name="level">Level of model</param>
            <param name="isParent">If TRUE, method creates 'Parent Sql'</param>
            <param name="isHierachialOnly">If TRUE, method uses hierachical structure information only.</param>
            <param name="tableName">Table name</param>
            <param name="aliveOnly">If "TRUE", sql loads Alived data only.</param>
        </member>
        <member name="M:TAP.Models.Model.CreateWhere(System.Text.StringBuilder@,TAP.ArgumentPack,System.Int32)">
            <summary>
            This method creates 'WHERE' sentences.
            </summary>
            <param name="sb">StringBuilder includes sql sentence</param>
            <param name="argument">Arguemnt list</param>
            <param name="level">Level of model</param>
        </member>
        <member name="M:TAP.Models.Model.MakeOracleTableScript(System.Boolean)">
            <summary>
            This method makes data table scheme for Oracle DBMS.
            </summary>
            <returns>Data table scripts for Oracle</returns>
        </member>
        <member name="M:TAP.Models.Model.MakeOracleTableScript(System.String,System.Boolean)">
            <summary>
            This method creates script for creating table for oracle DBMS.
            </summary>
            <param name="tableSpace">Table space</param>
            <param name="isHistoryTable">If set to true, this method creates script of history table</param>
            <returns>Script for creating table for oracle</returns>
        </member>
        <member name="M:TAP.Models.Model.MakeOracleTableScript(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method creates script for creating table for oracle DBMS.
            </summary>
            <param name="tableSpace">Table space</param>
            <param name="pctUsed">Block storage parameter used to specify when Oracle should consider a database block to be empty enough to be added to the freelist. Oracle will only insert new rows in blocks that is enqueued on the freelist</param>
            <param name="pctFree">Block storage parameter used to specify how much space should be left in a database block for future updates.</param>
            <param name="iniTRans">Entry count of ITL before performing transaction.</param>
            <param name="maxtrans">Max entry count of ITL</param>
            <param name="storageInitial">Base storage size of table</param>
            <param name="storageMinExtents">Minumum segment value for increasing</param>
            <param name="storageMaxExtents">Maximum segment value for increasing</param>
            <param name="storagePctIncrease">Segment value for PCT increasing</param>
            <param name="isHistroyTable">If set to true, this method creates script of history table</param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Model.MakeOracleSelectProcedureScript(System.Int32,System.Boolean)">
            <summary>
            This method makes script that creates selecting procedure for Oracle.
            모델의 기본 오라클용 SELECT 프로시저 스크립트를 만듭니다. 
            </summary>
            <returns>Script that creates selecting procedure for Oracle</returns>
        </member>
        <member name="M:TAP.Models.Model.MakeOracleModifyProcedureScirpt(System.Int32,System.Boolean)">
            <summary>
            This method makes script that creates modifying procedure for Oracle.
            모델의 기본 MODIFY 프로시저 스크립트를 만듭니다. 
            </summary>
            <returns>Script that creates modifying procedure for Oracle.</returns>
        </member>
        <member name="M:TAP.Models.Model.IsExclude(System.String,System.Boolean)">
            <summary>
            This method checks property that must be excluded or not
            </summary>
            <param name="name">Property name</param>
            <param name="isHistroyTable">Table is history table or not</param>
            <returns>If this method returns true, assinged property must be excluded.</returns>
        </member>
        <member name="M:TAP.Models.Model.MakeDefaultWhere(System.Text.StringBuilder@,System.Int32,System.Boolean)">
            <summary>
            This method makes default where statement.
            </summary>
            <param name="sb">StringBuilder object</param>
            <param name="level">level of model</param>
            <param name="isParent">If "TRUE", this method makes where statement for query type "Parent"</param>
        </member>
        <member name="M:TAP.Models.Model.MakeDefaultWhereWithoutDecode(System.Text.StringBuilder@,System.Int32,System.Boolean)">
            <summary>
            This method makes default where statement without decode function
            </summary>
            <param name="sb">StringBuilder object</param>
            <param name="level">level of model</param>
            <param name="isParent">If "TRUE", this method makes where statement for query type "Parent"</param>
        </member>
        <member name="M:TAP.Models.Model.LoadModelData">
            <summary>
            This method loads model data from default table
            </summary>
            <returns>Data rows includes model data</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelData(System.String,System.Boolean)">
            <summary>
            This method loads model data from specified table.
            </summary>
            <param name="tableName">Table name</param>
            <param name="isParent">If "TRUE", this method queries data using "Parent mode".</param>
            <returns>Data rows includes model data</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelData(System.String,TAP.ArgumentPack,System.Boolean)">
            <summary>
            This method loads model data from specified table using assigned ArgumentPack.
            </summary>
            <param name="tableName">Table name</param>
            <param name="arguments">ArgumentPack</param>
            <param name="isParent">If "TRUE", this method queries data using "Parent mode".</param>
            <returns>Data rows includes model data</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelDataList(TAP.ArgumentPack)">
            <summary>
            This method loads couples of data model from default table using "Parent Mode".
            </summary>
            <param name="arguments">ArgumentPack</param>
            <returns>Data rows includes model data</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelDataList(TAP.ArgumentPack,System.Boolean)">
            <summary>
            This method loads couples of data model from default table using "Parent Mode".
            </summary>
            <param name="arguments">ArgumentPack</param>
            <param name="isParent">If "TRUE", this method queries data using "Parent mode".</param>
            <returns>Data rows includes model data</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelHistoryData(TAP.ArgumentPack)">
            <summary>
            This method loads history data of model from default history table.
            </summary>
            <param name="arguments">Argument list</param>
            <returns>DataTable incldues history data</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadNestData(System.String)">
            <summary>
            This method loads nest model data form assigned table using "Parent Mode".
            </summary>
            <param name="tableName">Table name of XPath</param>
            <returns>Data rows includes nest model data</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadMultiModelData(System.String,TAP.ArgumentPack,System.Boolean)">
            <summary>
            This method loads couples of model data from specified table uisng assigned arguments.
            </summary>
            <param name="tableName">Table name</param>
            <param name="arguments">ArgumentPack</param>
            <param name="isParent">If "TRUE", this method queries data using "Parent mode".</param>
            <returns>DataTable incldues data</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadMultiModelHistory(System.String,TAP.ArgumentPack,System.Boolean)">
            <summary>
            This method loads couples of model history data from specified table using assigned arguments.
            </summary>
            <param name="tableName">Table name</param>
            <param name="arguments">ArgumentPack</param>
            <param name="isParent">If "TRUE", this method queries data using "Parent mode".</param>
            <returns>DataTable incldues history data</returns>
        </member>
        <member name="M:TAP.Models.Model.Refresh">
            <summary>
            This method refresh model data using DB data
            </summary>
        </member>
        <member name="M:TAP.Models.Model.SelectModelRawData(TAP.ArgumentPack,System.String,System.Boolean,System.Boolean)">
            <summary>
            This method load data from database.
            </summary>
            <param name="argArgumentPack">Argument list</param>
            <param name="argTableName">Table name</param>
            <param name="argParents">If this set true, this method load data using parent column</param>
            <param name="isHistory">If this set to true, this method load data from history table</param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:TAP.Models.Model.SelectModelRawData(System.String,System.String,TAP.ArgumentPack)">
            <summary>
            This method load data from database.
            </summary>
            <param name="procedureName">Procedure name or text command</param>
            <param name="tableName">Table name</param>
            <param name="argumentPack">Argument list</param>
            <returns>DataSet object</returns>
        </member>
        <member name="M:TAP.Models.Model.ExtractViaXml">
            <summary>
            This method extracts values of all members and saves to xml dom
            </summary>
            <returns>XML document</returns>
        </member>
        <member name="M:TAP.Models.Model.ExtractViaXml(System.Boolean)">
            <summary>
            This method extracts values of all members and saves to xml dom
            </summary>
            <param name="withCData">If 'TRUE', all inner text will be in "CDATA" section</param>
            <returns>XML document</returns>
        </member>
        <member name="M:TAP.Models.Model.ExtractViaXml(TAP.ArgumentPack,System.Boolean)">
            <summary>
            This method extracts values of all members and saves to xml dom
            </summary>
            <param name="header">Header Information</param>
            <param name="withCData">If 'TRUE', all inner text will be in "CDATA" section</param>
            <returns>XML document</returns>
        </member>
        <member name="M:TAP.Models.Model.ExtractViaXml(TAP.ArgumentPack,System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            This method extracts values of all members as xml docoment
            </summary>
            <param name="header">Header Information</param>
            <param name="extractMemebrList">Member list must be involued xml document</param>
            <param name="withCData">If 'TRUE', all inner text will be in "CDATA" section</param>
            <returns>XML document</returns>
        </member>
        <member name="M:TAP.Models.Model.ExtractViaJson">
            <summary>
            This method extracts values of all members as json docoment
            </summary>
            <returns>Json document</returns>
        </member>
        <member name="M:TAP.Models.Model.ExtractViaJson(System.Collections.Generic.List{System.String})">
            <summary>
            This method extracts values of all members as json docoment
            </summary>
            <param name="extractMemebrList">Member list must be involued xml document</param>
            <returns>Json document</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelHistory">
            <summary>
            This method loads model history data as Model array
            </summary>
            <returns>Model Array</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelHistory(System.String)">
            <summary>
            This method loads model history data as Model array
            </summary>
            <param name="events">Events</param>
            <returns>Model Array</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelHistory(System.String,System.String,TAP.Models.EnumSearhBaseTime)">
            <summary>
            This method loads model history data as Model array
            </summary>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="timeBase">Time base</param>
            <returns>Model Array</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadModelHistory(System.String,System.String,System.String,TAP.Models.EnumSearhBaseTime)">
            <summary>
            This method loads model history data as Model array
            </summary>
            <param name="startTime">Start time</param>
            <param name="endTime">End time</param>
            <param name="events">Events</param>
            <param name="timeBase">Time base</param>
            <returns>Model Array</returns>
        </member>
        <member name="M:TAP.Models.Model.IsDerivedFromModel(System.Type)">
            <summary>
            This method checks type that is derived from Model.
            </summary>
            <param name="type">Type of object</param>
            <returns>If "TRUE", assigned type is derived from Model.</returns>
        </member>
        <member name="M:TAP.Models.Model.IsDerivedFromIndependentModel">
            <summary>
            This method checks type that is derived from independent Model.
            </summary>
            <returns>If "TRUE", assigned type is derived from Independent Model.</returns>
        </member>
        <member name="M:TAP.Models.Model.IsDerivedFromModelSet(System.Type)">
            <summary>
            This method checks type that is derived from Model Set.
            </summary>
            <param name="type">Type of object</param>
            <returns>If "TRUE", assigned type is derived from Model Set.</returns>
        </member>
        <member name="M:TAP.Models.Model.IsDerivedFromThisModel(System.Type)">
            <summary>
            This method checks type that is derived from current model.
            </summary>
            <param name="type">Type of object</param>
            <returns>If "TRUE", assigned type is derived from type of this</returns>
        </member>
        <member name="M:TAP.Models.Model.ValidateQuantities(System.Int32,System.Int32)">
            <summary>
            This method checks that inputed count same as number of model in nest model.
            </summary>
            <param name="realQuantity">Number of models in nest model</param>
            <param name="virtualQuantity">Inputed number</param>
            <returns>If "TRUE", inputed count same as number of model in nest model.</returns>
        </member>
        <member name="M:TAP.Models.Model.MakeSearchingArgumentPack(System.String)">
            <summary>
            This method makes argument pack for inquirying.
            </summary>
            <param name="user">user</param>
            <returns>ArgumentPack</returns>
        </member>
        <member name="M:TAP.Models.Model.IsContain(System.String)">
            <summary>
            This model checks that model includes specfied member.
            </summary>
            <param name="memberName">Member name</param>
            <returns>If "TRUE", model includes specfied member.</returns>
        </member>
        <member name="M:TAP.Models.Model.IsContain(System.String,System.Boolean)">
            <summary>
            This model checks that model includes specfied member.
            </summary>
            <param name="memberName">Member name</param>
            <param name="ignoreCase">If 'TRUE', matching member name ignores case</param>
            <returns>If "TRUE", model includes specfied member.</returns>
        </member>
        <member name="M:TAP.Models.Model.LoadNestModel">
            <summary>
            This method loads nest model.
            </summary>
        </member>
        <member name="M:TAP.Models.Model.LoadNestModel(System.String)">
            <summary>
            This method loads specified nest model.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.Model.UnloadNestModel">
            <summary>
            This method unloads nest model.
            </summary>
        </member>
        <member name="M:TAP.Models.Model.ChangeIncludeNestModelMode(TAP.EnumFlagYN)">
            <summary>
            This method changes 'IncludeNestModel' mode.
            </summary>
            <param name="isIncludeNestModel">If "YES", this model will be includes nest models.</param>
        </member>
        <member name="M:TAP.Models.Model.CreateXml">
            <summary>
            This method createt xml of members of model.
            </summary>
            <returns>Xml document object</returns>
        </member>
        <member name="M:TAP.Models.Model.CorrelateDefaultInfo(TAP.Models.Model)">
            <summary>
            This method correlates default info between this model and assigned model.
            </summary>
            <param name="model">Model</param>
            <returns>If two model have same default info, this method will return true.</returns>
        </member>
        <member name="M:TAP.Models.Model.GetDefaultInfo">
            <summary>
            This method returns default information of model
            </summary>
            <returns>Default information of model</returns>
        </member>
        <member name="M:TAP.Models.Model.SetDefaultInfo(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method sets default info.
            </summary>
            <param name="newDefaultInfo"></param>
        </member>
        <member name="M:TAP.Models.Model.InheritMemberToNestModel(TAP.Models.Model)">
            <summary>
            This method inherits information of this model to nest models.
            </summary>
            <param name="child">Model</param>
            <returns>Model inherited parent's information</returns>
        </member>
        <member name="M:TAP.Models.Model.InheritMemberToOtherModel(TAP.Models.Model)">
            <summary>
            This method inherits information of this model to other models.
            </summary>
            <param name="model">Model</param>
            <returns>Model inherited informations of this model</returns>
        </member>
        <member name="M:TAP.Models.Model.GetMemberValue(System.String)">
            <summary>
            This method returns value of specified member.
            </summary>
            <param name="memberName">Member name</param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.Model.SetMemberValue(System.String,System.Object)">
            <summary>
            This method set value to specified member.
            </summary>
            <param name="memberName">Member name</param>
            <param name="value">Value</param>
        </member>
        <member name="M:TAP.Models.Model.SetMemberValue(TAP.ArgumentPack)">
            <summary>
            This method sets value to all members using argument pack
            </summary>
            <param name="memberValues">Argument pack</param>
        </member>
        <member name="M:TAP.Models.Model.GetMemberType(System.String)">
            <summary>
            This method returns type of specified member. If specified member does not exist in model, this method returns 'object' type.
            </summary>
            <param name="memberName">Member name</param>
            <returns>Type of specified member</returns>
        </member>
        <member name="M:TAP.Models.Model.GetModelRawData">
            <summary>
            This method returns model data as data row type
            </summary>
            <returns>Model data</returns>
        </member>
        <member name="M:TAP.Models.Model.SendMail(System.String,System.String,System.String)">
            <summary>
            This method sends mail.
            </summary>
            <param name="subject">Mail subject</param>
            <param name="sender">Mail sender</param>
            <param name="mailType">Mail type</param>
            <returns>If 'YES', sending mail succeed.</returns>
        </member>
        <member name="M:TAP.Models.Model.SendSMS(System.String,System.String,System.String)">
            <summary>
            This method sends sms
            </summary>
            <param name="smsDirectory">SMS directory</param>
            <param name="smsFileName">SMS file name</param>
            <param name="message">Text message</param>
            <returns>If 'YES', sending sms succeed.</returns>
        </member>
        <member name="M:TAP.Models.Model.ExtractMemberList(System.String)">
            <summary>
            This method extract member list with specified member category
            </summary>
            <param name="memberCategory">Member category</param>
            <returns>Member list</returns>
        </member>
        <member name="M:TAP.Models.Model.ExtractMemberValues(System.String)">
            <summary>
            This method extract member list with specified member category
            </summary>
            <param name="memberCategory">Member category</param>
            <returns>Member list</returns>
        </member>
        <member name="M:TAP.Models.Model.GetMemberDataType(System.String)">
            <summary>
            This method general type of member specified.
            </summary>
            <param name="name">Name of member</param>
            <returns>General type</returns>
        </member>
        <member name="M:TAP.Models.Model.ValidateDefaultInformation(System.Int32)">
            <summary>
            This method validates Hierachy structure of model.
            </summary>
            <param name="level">Hierachy sequence</param>
        </member>
        <member name="M:TAP.Models.Model.ValidateDefaultInformation(System.Int32,System.Boolean)">
            <summary>
            This method validates Hierachy structure of model.
            </summary>
            <param name="level">Hierachy sequence</param>
            <param name="needtoCheckAll">If 'TRUE', this method checks value 'ALL'.</param>
        </member>
        <member name="T:TAP.Models.ModelAllowedValueAttribute">
            <summary>
            This is model atrribute for model value limit
            </summary>
        </member>
        <member name="P:TAP.Models.ModelAllowedValueAttribute.MaxValue">
            <summary>
            Max value allowed
            </summary>
        </member>
        <member name="P:TAP.Models.ModelAllowedValueAttribute.MinValue">
            <summary>
            Min value allowed
            </summary>
        </member>
        <member name="M:TAP.Models.ModelAllowedValueAttribute.#ctor(System.Int64,System.Int64)">
            <summary>
            This creates instance of ModelAllowedValueAttribute
            </summary>
            <param name="maxValue">Max value</param>
            <param name="minValue">Min value</param>
        </member>
        <member name="T:TAP.Models.ModelCodeCategory">
            <summary>
            This is model attribute for category and sub-category
            </summary>
        </member>
        <member name="P:TAP.Models.ModelCodeCategory.CategoryCode">
            <summary>
            Category code
            </summary>
        </member>
        <member name="P:TAP.Models.ModelCodeCategory.SubCategoryCode">
            <summary>
            Sub category code
            </summary>
        </member>
        <member name="M:TAP.Models.ModelCodeCategory.#ctor(System.String,System.String)">
            <summary>
            This creates instance of ModelCodeCategory
            </summary>
            <param name="category">Category code</param>
            <param name="subCategory">Sub-category code</param>
        </member>
        <member name="T:TAP.Models.ModelDefaultInfo">
            <summary>
            This class is base hierachical structure.
            </summary>
        </member>
        <member name="P:TAP.Models.ModelDefaultInfo.Region">
            <summary>
            Region level
            </summary>
        </member>
        <member name="P:TAP.Models.ModelDefaultInfo.Facility">
            <summary>
            Facility level
            </summary>
        </member>
        <member name="P:TAP.Models.ModelDefaultInfo.User">
            <summary>
            User
            </summary>
        </member>
        <member name="T:TAP.Models.ModelDefaultInfo.HierarchicalDefaultInfo">
            <summary>
            Enumeratior of hierachical structure
            </summary>
        </member>
        <member name="F:TAP.Models.ModelDefaultInfo.HierarchicalDefaultInfo.REGION">
            <summary>
            Region
            </summary>
        </member>
        <member name="F:TAP.Models.ModelDefaultInfo.HierarchicalDefaultInfo.FACILITY">
            <summary>
            Facility
            </summary>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.Copy">
            <summary>
            This method makes copy of hierachical structure.
            </summary>
            <returns>Copy of hierachical structure</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.CreateInstance(System.Data.DataRow)">
            <summary>
            This method creates hierachical structure.
            </summary>
            <param name="defaultData">Data of hierachical structure</param>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.CreateXPath(System.Int32)">
            <summary>
            This method creates XPath using hierachical structure.
            </summary>
            <param name="level">Level of model</param>
            <returns>XPath string</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetMemberLevel(System.String)">
            <summary>
            This method get level of specified member;
            </summary>
            <param name="memberName">Level of specified member</param>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            This method changes model default info
            </summary>
            <param name="infoDictionary">Default Info dictionary</param>
            <param name="modelLevel">Model level</param>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            This method changes model default info
            </summary>
            <param name="infoDictionary">Default Info dictionary</param>
            <param name="modelLevel">Model level</param>
            <param name="defaultInfoMembers">Default info members</param>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetCurrentDefaultInfo">
            <summary>
            This method extract default info string as dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetDataSource(System.Int32,System.String)">
            <summary>
            This method gets data source name
            </summary>
            <param name="level">Level of model</param>
            <param name="tableCategory">Table category</param>
            <returns>Data source name</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.ExtractTableName(System.String,System.Int32)">
            <summary>
            This model extracts table name using hierachical structure.
            </summary>
            <param name="tableCategory">Table category</param>
            <param name="level">Level of model</param>
            <returns>Table name</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.#ctor">
            <summary>
            This creates instance of hierachical structure.
            계층구조의 인스턴스를 생성합니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.Dispose">
            <summary>
            This method disposes hierachical structure.
            계층구조를 소멸시킵니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.MakeArgumentPack">
            <summary>
            This method makes argument pack using hierachical structure.
            This method made argument pack does not contain identification argument.
            계층구조를 사용하여 ArguemtPack을 만듭니다. 
            이 메서드가 만든 ArgumentPack은 식별자 Argument를 포함하지 않습니다. 
            </summary>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.MakeArgumentPack(System.Int32,System.Boolean)">
            <summary>
             This method makes argument pack using default info.
             This method made argument pack contains identification argument.
            </summary>
            <param name="level">Level of current model.</param>
            <param name="isParent">If this argument set to false, This method return data for one model only.</param>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.Equals(TAP.Models.ModelDefaultInfo,System.Int32)">
            <summary>
            This method checks that assigned hierachical structure is sames as this.
            </summary>
            <param name="hierachicalStructure">Hierachical Structure</param>
            <param name="level">Level</param>
            <returns>If "TRUE", two hierachicalStructures are same.</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetLevelValue(System.String)">
            <summary>
            This returns value of specified level.
            </summary>
            <param name="levelName">Level name</param>
            <returns>Value</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetAttributes">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Attribute Collection</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetClassName">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Class name</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetComponentName">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Component name</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetConverter">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Type Converter</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetDefaultEvent">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Default event</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetDefaultProperty">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Default properties</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetEditor(System.Type)">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <param name="editorBaseType"></param>
            <returns>Default editor</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetEvents(System.Attribute[])">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <param name="attributes"></param>
            <returns>Event collection</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetEvents">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Event collection</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetProperties(System.Attribute[])">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <param name="attributes"></param>
            <returns>Prpperty collection</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <param name="pd"></param>
            <returns>This instance</returns>
        </member>
        <member name="M:TAP.Models.ModelDefaultInfo.GetProperties">
            <summary>
            Implementaion of ICustomTypeDescriptor
            </summary>
            <returns>Property collection of this instance</returns>
        </member>
        <member name="T:TAP.Models.TAPModelException">
            <summary>
            This is TAP Model exception
            </summary>
        </member>
        <member name="M:TAP.Models.TAPModelException.#ctor(System.Reflection.MethodBase,System.Exception)">
            <summary>
            This creates TAP exception model.<br></br>
            TAP 예외 모델을 생성합니다. 
            </summary>
            <param name="methodName">Method</param>
            <param name="ex">Instance of System.Exception object</param>
        </member>
        <member name="T:TAP.Models.ModelLog">
            <summary>
            This is model log
            </summary>
        </member>
        <member name="M:TAP.Models.ModelLog.MakeFilePath(System.String,System.String)">
            <summary>
            This method makes log file path
            </summary>
            <param name="objectName">Object name</param>
            <param name="logType">Log type</param>
            <returns>If 'TURE', making log file path succeed.</returns>
        </member>
        <member name="T:TAP.Models.ModelSet">
            <summary>
            This modelset is base model set of all model set.
            </summary>
        </member>
        <member name="F:TAP.Models.ModelSet._model">
            <summary>
            Base model of model set
            모델 셋을 구성하는 기본 모델
            </summary>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.ModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.ModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="M:TAP.Models.ModelSet.Dispose">
            <summary>
            This method disposes model set.
            모델셋을 소멸시킵니다. 
            </summary>
        </member>
        <member name="P:TAP.Models.ModelSet.Names">
            <summary>
            This method returns all names of models in model set.
            </summary>
        </member>
        <member name="P:TAP.Models.ModelSet.FirstModel">
            <summary>
            This model returns first model of model set.
            </summary>
        </member>
        <member name="P:TAP.Models.ModelSet.Models">
            <summary>
            This method loads all models of model set.
            </summary>
        </member>
        <member name="P:TAP.Models.ModelSet.Count">
            <summary>
            Number of models in model set
            </summary>
        </member>
        <member name="P:TAP.Models.ModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="M:TAP.Models.ModelSet.Add(TAP.Models.Model)">
            <summary>
            This method adds model to mdoel set.
            </summary>
            <param name="model">Model</param>
        </member>
        <member name="M:TAP.Models.ModelSet.AddRange(TAP.Models.ModelSet)">
            <summary>
            This method adds model set to mdoel set.
            </summary>
            <param name="modelSet">Model set</param>
        </member>
        <member name="M:TAP.Models.ModelSet.Contains(System.String)">
            <summary>
            This method checks that model set inlcudes model has specified name.
            </summary>
            <param name="name">Model name</param>
            <returns>If "TRUE", model set inlcudes model has assigned name.</returns>
        </member>
        <member name="M:TAP.Models.ModelSet.Remove(System.String)">
            <summary>
            This method remove model has specified name.
            </summary>
            <param name="name">Model name</param>
        </member>
        <member name="M:TAP.Models.ModelSet.Clear">
            <summary>
            This model remove all models.
            </summary>
        </member>
        <member name="M:TAP.Models.ModelSet.Delete(System.String,System.String)">
            <summary>
            This method delete specified model.
            </summary>
            <param name="name">Model name</param>
            <param name="deleteuser">User</param>
        </member>
        <member name="M:TAP.Models.ModelSet.Delete(System.String,System.String,System.String,TAP.Models.EnumEventFlag)">
            <summary>
            This method delete specified model.
            </summary>
            <param name="name">Model name</param>
            <param name="deleteuser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventFlag">Event type</param>
        </member>
        <member name="M:TAP.Models.ModelSet.Delete(System.String,System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method delete specified model.
            </summary>
            <param name="name">Model name</param>
            <param name="deleteuser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="lastEventComment">Comments of event</param>
        </member>
        <member name="M:TAP.Models.ModelSet.Delete(System.String,System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method delete specified model.
            </summary>
            <param name="name">Model name</param>
            <param name="deleteuser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="lastEventComment">Comments of event</param>
            <param name="lastJob">Last job name</param>
        </member>
        <member name="M:TAP.Models.ModelSet.Delete(System.String,System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method delete specified model.
            </summary>
            <param name="name">Model name</param>
            <param name="deleteuser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="lastEventComment">Comments of event</param>
            <param name="lastJobCode">Last job code</param>
            <param name="lastEventCode">Last event code</param>
            <param name="lastMainOperation">Corresponding main operation</param>
            <param name="lastOperation">Corresponding operation</param>
            <param name="lastStep">Last step</param>
        </member>
        <member name="M:TAP.Models.ModelSet.DeleteAll(System.String)">
            <summary>
            This method deletes all of model in model set.
            </summary>
            <param name="deleteUser">User</param>
        </member>
        <member name="M:TAP.Models.ModelSet.DeleteAll(System.String,System.String,TAP.Models.EnumEventFlag)">
            <summary>
            This method deletes all of model in model set.
            </summary>
            <param name="deleteUser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventFlag">Event type</param>
        </member>
        <member name="M:TAP.Models.ModelSet.DeleteAll(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method deletes all of model in model set.
            </summary>
            <param name="deleteUser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="lastEventComment">Comments of event</param>
        </member>
        <member name="M:TAP.Models.ModelSet.DeleteAll(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method deletes all of model in model set.
            </summary>
            <param name="deleteUser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="lastEventComment">Comments of event</param>
            <param name="lastJob">Last job name</param>
        </member>
        <member name="M:TAP.Models.ModelSet.DeleteAll(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method deletes all of model in model set.
            </summary>
            <param name="deleteUser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventTime">Event time</param>
            <param name="eventFlag">Event type</param>
            <param name="lastEventComment">Comments of event</param>
            <param name="lastJobCode">Last job code</param>
            <param name="lastEventCode">Last event code</param>
            <param name="lastMainOperation">Corresponding main operation</param>
            <param name="lastOperation">Corresponding operation</param>
            <param name="lastStep">Last step</param>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeLastEvent(System.String,TAP.Models.EnumEventFlag,System.String)">
            <summary>
            This method changes last event of each model.
            </summary>
            <param name="events">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeLastEvent(System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method changes last event of each model.
            </summary>
            <param name="events">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeLastEvent(System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method changes last event of each model.
            </summary>
            <param name="events">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="command">Command</param>
            <param name="eventComment">Comments of event</param>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeLastEvent(System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes last event of each model.
            </summary>
            <param name="events">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="mainOperation">Corresponding main operation</param>
            <param name="operation">Corresponding operation</param>
            <param name="command">Command</param>
            <param name="eventComment">Comments of event</param>
            <param name="step">Step</param>
            <param name="status">Status</param>
        </member>
        <member name="M:TAP.Models.ModelSet.LoadModels(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="defaultInfo">Default info</param>
        </member>
        <member name="M:TAP.Models.ModelSet.LoadModels(TAP.Models.ModelDefaultInfo,System.Boolean)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="defaultInfo">Default info</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.ModelSet.LoadModels(TAP.Models.ModelDefaultInfo,System.Int32)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="defaultInfo">Default info</param>
            <param name="level">Model level</param>
        </member>
        <member name="M:TAP.Models.ModelSet.LoadModels(TAP.Models.ModelDefaultInfo,System.Int32,TAP.EnumFlagYN)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="defaultInfo">Default info</param>
            <param name="level">Model level</param>
            <param name="includeNestData">If "YES", each models loads nest models.</param>
        </member>
        <member name="M:TAP.Models.ModelSet.LoadModels(TAP.Models.ModelDefaultInfo,System.Int32,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="defaultInfo">Default info</param>
            <param name="level">Model level</param>
            <param name="includeNestData">If "YES", each models loads nest models.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.ModelSet.LoadModels(TAP.ArgumentPack,System.String)">
            <summary>
            This method loads mdoel data and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
        </member>
        <member name="M:TAP.Models.ModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
        </member>
        <member name="M:TAP.Models.ModelSet.CreateSeqenceModelArray">
            <summary>
            This method makes model array using model sequences.
            </summary>
            <returns>Model Array</returns>
        </member>
        <member name="M:TAP.Models.ModelSet.CreateSeqenceArray">
            <summary>
            This method makes string array using model sequences.
            </summary>
            <returns>Model name array</returns>
        </member>
        <member name="M:TAP.Models.ModelSet.CreateSequenceList">
            <summary>
            This method makes string array using model sequences.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.ModelSet.CreateSortingList">
            <summary>
            This method makes sorted  string array using model name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.ModelSet.CreateReservingList">
            <summary>
            This method makes reserved string array using model name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.ModelSet.GetMaxSequence">
            <summary>
            This method get model has max sequence.
            </summary>
            <returns>Model has max sequence</returns>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeIncludeNestModelMode(TAP.EnumFlagYN)">
            <summary>
            This method changes include nest model mode of models in model set.
            </summary>
            <param name="includeNestModel">If "YES", each models loads nest models.</param>
        </member>
        <member name="M:TAP.Models.ModelSet.GetDefaultModelType">
            <summary>
            This method returns default model type of this model set
            </summary>
            <returns>Model object</returns>
        </member>
        <member name="M:TAP.Models.ModelSet.Save(System.String)">
            <summary>
            This method fills argument pack for saving.
            </summary>
            <param name="updateUser">User</param>
            <returns>ArgumentPack</returns>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveModel(System.String,System.String,TAP.EnumFlagYN)">
            <summary>
            This method saves model specified.
            </summary>
            <param name="name">Model name</param>
            <param name="updateUser">User</param>
            <param name="modifyingLastEvent">If 'YES', this method saves model without changing</param>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveModel(System.String,System.String,System.String,TAP.Models.EnumEventFlag)">
            <summary>
            This method saves model specified.
            </summary>
            <param name="name">Model name</param>
            <param name="updateUser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventFlag">Event type</param>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveModel(System.String,System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method saves model specified.
            </summary>
            <param name="name">Model name</param>
            <param name="updateUser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="lastEventComment">Comments of event</param>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveModel(System.String,System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method saves model specified.
            </summary>
            <param name="name">Model name</param>
            <param name="updateUser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="lastEventComment">Comments of event</param>
            <param name="lastJob">Last job name</param>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveModel(System.String,System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method saves model specified.
            </summary>
            <param name="name">Model name</param>
            <param name="updateUser">User</param>
            <param name="lastEvent">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="lastEventComment">Comments of event</param>
            <param name="lastJobCode">Last job code</param>
            <param name="lastEventCode">Last event code</param>
            <param name="lastMainOperation">Corresponding main operation</param>
            <param name="lastOperation">Corresponding operation</param>
            <param name="lastStep">Last step</param>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveAllModel(System.String,TAP.EnumFlagYN)">
            <summary>
            This method saves all of model in model set.
            </summary>
            <param name="updateUser">User</param>
            <param name="modifyingLastEvent">If 'YES', this method saves model without changing</param>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveAllModel(System.String,System.String,TAP.Models.EnumEventFlag)">
            <summary>
            This method saves all of model in model set.
            </summary>
            <param name="updateUser">User</param>
            <param name="events">Contents of event</param>
            <param name="eventFlag">Event type</param>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveAllModel(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method saves all of model in model set.
            </summary>
            <param name="updateUser">User</param>
            <param name="events">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveAllModel(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method saves all of model in model set.
            </summary>
            <param name="updateUser">User</param>
            <param name="events">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comments of event</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.ModelSet.SaveAllModel(System.String,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method saves all of model in model set.
            </summary>
            <param name="updateUser">User</param>
            <param name="events">Contents of event</param>
            <param name="eventFlag">Event type</param>
            <param name="eventTime">Event time</param>
            <param name="eventComment">Comments of event</param>
            <param name="command">Last job code</param>
            <param name="status">Status</param>
            <param name="mainOperation">Corresponding main operation</param>
            <param name="operation">Corresponding operation</param>
            <param name="step">Last step</param>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method changes hierachical structure of model in model set
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.String)">
            <summary>
            This method changes hierachical structure of model in model set
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String)">
            <summary>
            This method changes hierachical structure of model in model set
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.ModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Event comment</param>
            <param name="command">Command</param>
        </member>
        <member name="M:TAP.Models.ModelSet.ValidateItem(TAP.Models.Model)">
            <summary>
            This mehtod validate that assigned model is valid.
            </summary>
            <param name="argModel">Model</param>
        </member>
        <member name="M:TAP.Models.ModelSet.IsContains(System.String)">
            <summary>
            This method checks that model set inlcudes model has specified name.
            </summary>
            <param name="name">Model name</param>
            <returns>If "TRUE", model set inlcudes model has assigned name.</returns>
        </member>
        <member name="M:TAP.Models.ModelSet.GetModelRawData">
            <summary>
            This method returns data table of raw data of models consist this model set.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.ModelSet.SortNames">
            <summary>
            This method sorts models by name
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.ModelSet.ConvertToModelList">
            <summary>
            This method makes model list using current models
            </summary>
            <returns>Model List</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.EnumServiceConfiguration">
            <summary>
            This is distingush service configuration
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.EnumServiceConfiguration.SINGLE">
            <summary>
            Service is running on single server
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.EnumServiceConfiguration.CLUSTER">
            <summary>
            Service is running on cluster environment
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.EnumServiceConfiguration.EXECUTABLE_FILE">
            <summary>
            Executable file
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.EnumFileSystemBase">
            <summary>
            This is list of file system 
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.EnumFileSystemBase.DIRECTORYBASE">
            <summary>
            Directory base
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.EnumFileSystemBase.FILEBASE">
            <summary>
            File base
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.EnumMonitoringBase">
            <summary>
            This is monitoring base list
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.EnumMonitoringBase.LOCAL">
            <summary>
            Local
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.EnumMonitoringBase.REMOTE">
            <summary>
            Remote server
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.SystemBasicModel">
            <summary>
            This is base model of System model.
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._SYSTEM_TABLE_NAME_SERVERBASIC">
            <summary>
            Table name of Server
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._SYSTEM_TABLE_NAME_DISKBASIC">
            <summary>
            Table name of disk
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._SYSTEM_TABLE_NAME_SERVICEGROUPBASIC">
            <summary>
            Table name of Service group
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._SYSTEM_TABLE_NAME_SERVICEBASIC">
            <summary>
            Table name of service
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._SYSTEM_TABLE_NAME_FUNCTIONBASIC">
            <summary>
            Table name of function
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._SYSTEM_TABLE_NAME_FUNCTIONCASEBASIC">
            <summary>
            Table name of function case
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._SYSTEM_TABLE_NAME_INTERFACEBASIC">
            <summary>
            Table name of interface
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._SYSTEM_TABLE_NAME_DIRECTORYBASIC">
            <summary>
            Table name of directory
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._COLUMN_NAME_SERVER">
            <summary>
            Column name of server
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._COLUMN_NAME_DISK">
            <summary>
            Column name of disk
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._COLUMN_NAME_SERVICEGROUP">
            <summary>
            Service group column name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._COLUMN_NAME_SERVICE">
            <summary>
            Service menu column name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._COLUMN_NAME_FUNCTION">
            <summary>
            Function column name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._COLUMN_NAME_FUNCTIONCASE">
            <summary>
            Function case column name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._COLUMN_NAME_INTERFACE">
            <summary>
            Interface column name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._COLUMN_NAME_DIRECTORY">
            <summary>
            Directory column name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._ARGUMENTKEY_SERVER">
            <summary>
            Server argument name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._ARGUMENTKEY_DISK">
            <summary>
            Disk argument name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._ARGUMENTKEY_SERVICEGROUP">
            <summary>
            Service group argument name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._ARGUMENTKEY_SERVICE">
            <summary>
            Service argument name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._ARGUMENTKEY_FUNCTION">
            <summary>
            Function argument name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._ARGUMENTKEY_FUNCTIONCASE">
            <summary>
            Function case argument name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._ARGUMENTKEY_INTERFACE">
            <summary>
            Interface argument name
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel._ARGUMENTKEY_DIRECTORY">
            <summary>
            Directory argument name
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicModel.NeedToAllWarn">
            <summary>
            If 'YES', all warning will run
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel.checkInterval">
            <summary>
            Check Interval
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel.currentModel">
            <summary>
            If "YES", this model is in using.
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel.needToMonitor">
            <summary>
            If 'YES', management service starts to monitor this.
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicModel.description">
            <summary>
            Description of model
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicModel.DefaultInformation">
            <summary>
            Hierachical structure of system model
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicModel.CheckInterval">
            <summary>
            Check Interval(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicModel.Region">
            <summary>
            Region level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicModel.Facility">
            <summary>
            Facility level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicModel.CurrentModel">
            <summary>
            If "YES", this model is in using. 
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicModel.NeedToMonitor">
            <summary>
            If 'YES', management service starts to monitor this.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicModel.Description">
            <summary>
            Description of model
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicModel.InitializeInterval">
            <summary>
            Interval of initializing max and min value
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.ValidateDefaultInformation(System.Int32,System.Boolean)">
            <summary>
            This method validates Hierachy structure of model.
            </summary>
            <param name="level">Hierachy sequence</param>
            <param name="needtoCheckAll">If 'TRUE', this method checks value 'ALL'.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.MakeDefaultArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.MakeParentArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method extracts name list of hierachical structure that is consist this model.
            </summary>
            <returns>Array includes name list of hierachical structure that is consist this model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.GetDefaultInfo">
            <summary>
            This method returns default information of model
            </summary>
            <returns>Default information of model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.GetChangedLevel(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method get member that changed by changing default info event
            </summary>
            <param name="defaultInfo">Model defult Info.</param>
            <returns>Beggest level changed</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.MergeModel(TAP.Models.Model,System.String)">
            <summary>
            This method is not supported in this model.
            </summary>
            <param name="model"></param>
            <param name="updateUser"></param>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.SplitModel(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            This method is not supported in this model.
            </summary>
            <param name="splitModelName"></param>
            <param name="nestModelNames"></param>
            <param name="updateUser"></param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.AssignArrayValues(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.CreateMailMessage(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.LoadMailReceiverList(System.String)">
            <summary>
            This methods loads receiver list
            </summary>
            <param name="mailType">Mailing type</param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicModel.LoadBasicModel(System.Int32)">
            <summary>
            This method is not supported.
            </summary>
            <param name="modelLevel"></param>
        </member>
        <member name="T:TAP.Models.SystemBasic.SystemBasicDefaultInfo">
            <summary>
            This class is hierachical structure of system model.<br></br>
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.server">
            <summary>
            Server level
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.disk">
            <summary>
            Disk level
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.serviceGroup">
            <summary>
            Service group level
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.service">
            <summary>
            Service level
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.function">
            <summary>
            Function level
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.functionCase">
            <summary>
            Function case level
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.interfaces">
            <summary>
            Interface level
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.directories">
            <summary>
            Directory level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicDefaultInfo.Server">
            <summary>
            Server level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicDefaultInfo.Disk">
            <summary>
            Disk level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicDefaultInfo.ServiceGroup">
            <summary>
            Service group level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicDefaultInfo.Service">
            <summary>
            Service level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicDefaultInfo.Function">
            <summary>
            Function level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicDefaultInfo.FunctionCase">
            <summary>
            Function case level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicDefaultInfo.Interfaces">
            <summary>
            Interface level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.SystemBasicDefaultInfo.Directories">
            <summary>
            Directory level
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.#ctor">
            <summary>
            This creates instance of hierachical structure.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.#ctor(System.Data.DataRow)">
            <summary>
            This creates instance of hierachical structure.
            </summary>
            <param name="dataRow">Hierachical structure data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.Dispose">
            <summary>
            This dispoes instance of hierachical structure.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.CreateInstance(System.Data.DataRow)">
            <summary>
            This method instance of hierachical structure.
            </summary>
            <param name="dataRow">Hierachy structure data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.Copy">
            <summary>
            This method makes copy of hierachical structure.
            </summary>
            <returns>Copy of hierachical structure</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.CreateXPath(System.Int32)">
            <summary>
            This method is not implemented 
            </summary>
            <param name="level">level</param>
            <returns>xPath</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo">
            <summary>
            Enumeratior of hierachical structure
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.REGION">
            <summary>
            Region
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.FACILITY">
            <summary>
            Facility
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.SERVER">
            <summary>
            Server
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.DISK">
            <summary>
            Disk
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.SERVICEGROUP">
            <summary>
            Service group
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.SERVICE">
            <summary>
            Service
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.FUNCTION">
            <summary>
            Function
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.INTERFACE">
            <summary>
            Interface
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.DIRECTORY">
            <summary>
            Directory
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.SystemBasicDefaultInfo.HierarchicalDefaultInfo.FUNCTIONCASE">
            <summary>
            Function case
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.MakeArgumentPack">
            <summary>
            This method makes argument pack using hierachical structure.
            This method made argument pack does not contain identification argument.
            </summary>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.MakeArgumentPack(System.Int32,System.Boolean)">
            <summary>
             This method makes argument pack using default info.
             This method made argument pack contains identification argument.
            </summary>
            <param name="level">Level of current model.</param>
            <param name="isParent">If this argument set to false, This method return data for one model only.</param>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            This method changes model default info
            </summary>
            <param name="infoDictionary">Default Info dictionary</param>
            <param name="modelLevel">Model level</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            This method changes model default info
            </summary>
            <param name="infoDictionary">Default Info dictionary</param>
            <param name="modelLevel">Model level</param>
            <param name="defaultInfoMembers">Default info members</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.GetCurrentDefaultInfo">
            <summary>
            This method extract default info string as dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.SystemBasicDefaultInfo.GetMemberLevel(System.String)">
            <summary>
            This method get level of specified member;
            </summary>
            <param name="memberName">Level of specified member</param>
        </member>
        <member name="T:TAP.Models.SystemBasic.DirectoryBasicModel">
            <summary>
            This is directory model.
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.DirectoryBasicModel._SOURCE_DIRECTORY">
            <summary>
            Source directory key
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.DirectoryBasicModel._EXCEPTION_DIRECTORY">
            <summary>
            Exception directory key
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.DirectoryBasicModel._BACKUP_DIRECTORY">
            <summary>
            Backup directory key
            </summary>
        </member>
        <member name="F:TAP.Models.SystemBasic.DirectoryBasicModel._LOG_DIRECTORY">
            <summary>
            Log directory key
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.Server">
            <summary>
            Server level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.ServiceGroup">
            <summary>
            Service group level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.Service">
            <summary>
            Service level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.CriMaxFileCount">
            <summary>
            Critical MAX. point(EA)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.CriMinFileCount">
            <summary>
            Critical MIN. point(EA)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.CriMaxFileSize">
            <summary>
            Critical Max File Size(MB)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.CriMinFileSize">
            <summary>
            Critical Min File Size(MB)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.OldFileTimeOut">
            <summary>
            Old File time out(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.AutoArchiveTimeOut">
            <summary>
            Auto Archive time out(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.CriIdleTime">
            <summary>
            Max Idle time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.CriMaxFileCountTime">
            <summary>
            Critical Max file count time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.CriMinFileCountTime">
            <summary>
            Ctirical Min file count time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.CriMaxFileSizeTime">
            <summary>
            Ctirical Max file size time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.CriMinFileSizeTime">
            <summary>
            Ctirical Min file size time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.Path">
            <summary>
            Path of directory
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.ValidExtensionList">
            <summary>
            Valid extension list
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.NetworkPath">
            <summary>
            Network path including shared name
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.SharedName">
            <summary>
            Shared name on disk includes this directory
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.NeedToRecursiveMonitor">
            <summary>
            If 'YES', managment service will execute recursilve-monitoring
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.ArchiveBase">
            <summary>
            Archive Base, 
            IF 'DIRECTORYBASE', management service will execute directory-base archiving. 
            IF 'FILEBASE', management service will execute file-base archiving. 
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.ArchiveCheckBase">
            <summary>
            Archive check Base, 
            IF 'DIRECTORYBASE', management service will check directory-base
            IF 'FILEBASE', management service will check file-base. 
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.NeedToWarnMaxFileCount">
            <summary>
            If 'YES', management service will warn you when file count of directory more than critical point (CriticalMaxPoint).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.NeedToWarnMinFileCount">
            <summary>
            If 'YES', management service will warn you when file count of directory less than critical point (CriticalMinPoint).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.NeedToWarnDirectoryIdle">
            <summary>
            If 'YES', management service will warn you when directory idle time more than critical point (CriticalIdleTime).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.NeedToWarnMaxFileSize">
            <summary>
            If 'YES', management service will warn you when file size of directory more than critical point(CriticalMaxFileSize).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.NeedToWarnMinFileSze">
            <summary>
            If 'YES', management service will warn you when file size of directory less than critical point(CriticalMinFileSize).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.WarnMethodMaxFileCount">
            <summary>
            Warnig method of critical max file count
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.WarnMethodMinFileCount">
            <summary>
            Warnig method of critical min file count
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.WarnMethodDirectoryIdle">
            <summary>
            Warnig method of critical directory idel time
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.WarnMethodMaxFileSize">
            <summary>
            Warning method of critical max file size
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.WarnMethodMinFileSize">
            <summary>
            Warning method of critical min file size
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.AssignArrayValues">
            <summary>
            This model does not have nest model.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModel.NeedToAllWarn">
            <summary>
            If 'YES', all warning will run
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.DirectoryBasicModelSet">
            <summary>
            This is directory model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.DirectoryBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data. 
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DirectoryBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.DiskBasicModel">
            <summary>
            This is disk model
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.Server">
            <summary>
            Server level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.DiskSize">
            <summary>
            Disk size(MB)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.CriUsage">
            <summary>
            Critical point(Percentage)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.CriTime">
            <summary>
            Critical point of time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.VolumeLabel">
            <summary>
            Volume label
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.SharedName">
            <summary>
            Shared name on network
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.WarnMethodDiskUsage">
            <summary>
            Warning method of disk usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.NeedToWarnDiskUsage">
            <summary>
            If 'YES' management service warn you when disk usage more than critical point (CriticalUsage).
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModel.NeedToAllWarn">
            <summary>
            If 'YES', all warning will run
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.DiskBasicModelSet">
            <summary>
            This is disk model set
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModelSet.#ctor">
            <summary>
            This method creates instance of this. 
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.DiskBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.DiskBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.FunctionBasicModel">
            <summary>
            This is function model.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionBasicModel.Server">
            <summary>
            Server level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionBasicModel.ServiceGroup">
            <summary>
            Service group level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionBasicModel.Service">
            <summary>
            Service level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionBasicModel.FunctionCases">
            <summary>
            Function case list
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.<br></br>
            모델내 필드를 초기화합니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionBasicModel.NeedToAllWarn">
            <summary>
            This method is not supported in this model.
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.FunctionBasicModelSet">
            <summary>
            This is funciton model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.FunctionCaseBasicModel">
            <summary>
            This is function-case model.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.Server">
            <summary>
            Server level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.ServiceGroup">
            <summary>
            Service group level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.Service">
            <summary>
            Service level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.Function">
            <summary>
            Function level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.NeedToProcess">
            <summary>
            If 'YES', this case will be processed.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.FilterDevice">
            <summary>
            Devices in this list will not be process this case.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.FilterEquipment">
            <summary>
            Equipments in this list will not be process this case.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.FilterDeviceList">
            <summary>
            These device will be skiped this function case
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.FilterEquipmentList">
            <summary>
            These device will be skiped this function case
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.AssignArrayValues">
            <summary>
            This model does not have nest model.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModel.NeedToAllWarn">
            <summary>
            This method is not supported in this model.
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.FunctionCaseBasicModelSet">
            <summary>
            This is Function case model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.FunctionCaseBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.FunctionCaseBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.InterfaceBasicModel">
            <summary>
            This is interface model.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.Server">
            <summary>
            Server level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.ServiceGroup">
            <summary>
            Service group level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.Service">
            <summary>
            Service level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.TargetIPAddress">
            <summary>
            Target system IP Address
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.TargetPortNo">
            <summary>
            Target system Port No
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.TargetDirectory">
            <summary>
            Target Directory
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.TargetUserID">
            <summary>
            Target system User ID
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.TargetPassword">
            <summary>
            Target system Password
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.SourceDirectory">
            <summary>
            Source directory
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.Filter">
            <summary>
            Filter
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.NeedInterface">
            <summary>
            If 'YES', this interface must be activated.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModel.NeedToAllWarn">
            <summary>
            This method is not supported in this model.
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.InterfaceBasicModelSet">
            <summary>
            This is interface model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModelSet.#ctor">
            <summary>
            This method creates instance of this. 
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.InterfaceBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.InterfaceBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.ServerBasicModel">
            <summary>
            This is server basic model
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.CriCPUTime">
            <summary>
            Critical point of CPU time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.CriMemoryTime">
            <summary>
            Critical point of memory time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.CriPFTime">
            <summary>
            Critical point of PF time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.CriMemoryUsage">
            <summary>
            Critical point of Physical memory usage(Percentage)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.CriPFUsage">
            <summary>
            Critical point of paged fool usage(Percentage)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.CriCPUUsage">
            <summary>
            Critical point of CPU Usage(Percentage).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.IPAddress">
            <summary>
            IP Addaress
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.SMTPServer">
            <summary>
            SMTP server address for alarm mail
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.SMSDirectory">
            <summary>
            Directory for alarm SMS
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.SMSFileName">
            <summary>
            File name for alarm SMS
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.AdminUser">
            <summary>
            Administrator's user ID
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.AdminPassword">
            <summary>
            Administrator's password
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.FtpUser">
            <summary>
            Ftp user ID
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.FtpPassword">
            <summary>
            Ftp password
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.FtpPath">
            <summary>
            Ftp Path
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.AdminUserDomain">
            <summary>
            Admin user's domain
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.FtpUserDomain">
            <summary>
            Ftp user's domain
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.ServiceGroups">
            <summary>
            Service group list
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.Disks">
            <summary>
            Disks list
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.WarnMethodMemoryUsage">
            <summary>
            Waring Method of memory usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.WarnMethodCPUUsage">
            <summary>
            Waring Method of CPU usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.WarnMethodPFUsage">
            <summary>
            Waring Method of PF usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.NeedToWarnMemoryUsage">
            <summary>
            If 'YES', management service will warn you when physical memory usage more than critical point (CriticalMemoryUsage).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.NeedToWarnCPUUsage">
            <summary>
            If 'YES', management service will warn you when CPU usage usage more than critical point (CriticalCPUUsage).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.NeedToWarnPFUsage">
            <summary>
            If 'YES', management service will warn you when paged pool usage more than critical point (CriticalPagedPoolUsage).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.MonitoringBase">
            <summary>
            Monitoring Base
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.CreateInstance(System.String)">
            <summary>
            This method creates instance of model
            </summary>
            <param name="name">Model name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.<br></br>
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.Dispose">
            <summary>
            This method disposes this model.<br></br>
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.<br></br> 
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModel.NeedToAllWarn">
            <summary>
            If 'YES', all warning will run
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.ServerBasicModelSet">
            <summary>
            This is server basic model set
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServerBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServerBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.ServiceBasicModel">
            <summary>
            This is service model.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.Server">
            <summary>
            Server level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.ServiceGroup">
            <summary>
            Service group level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.Name">
            <summary>
            Model identity<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.RefreshInterval">
            <summary>
            Refresh Interval(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.RefreshRestartInterval">
            <summary>
            Restart interval when application is refreshed(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.ForceRestartRetryCount">
            <summary>
            Retrying count when application is restarted by force(EA)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.ForceRestartRetryInterval">
            <summary>
            Interval when application is restarted by force(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.WaitJobEndTimeOut">
            <summary>
            Time out which waits for ending job(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.WaitJobEndRetryCount">
            <summary>
            Retyrying count which waits for ending job(EA)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMaxCPUUsage">
            <summary>
            Critical Max CPU Time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMinCPUUsage">
            <summary>
            Critical Min CPU Time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMaxCPUTime">
            <summary>
            Critical Max CPU Time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMinCPUTime">
            <summary>
            Critical Min CPU Time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMaxMemoryUsage">
            <summary>
            Critical Max Memory Usage(MB)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMinMemoryUsage">
            <summary>
            Critical Min Memory Usage(MB)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMaxMemoryTime">
            <summary>
            Critical Max Memory Time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMinMemoryTime">
            <summary>
            Critical Min Memory Time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMaxVMUsage">
            <summary>
            Critical Max VM Usage(MB)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMinVMUsage">
            <summary>
            Critical Min VM Usage(MB)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMaxVMTime">
            <summary>
            Critical Max VM Time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.CriMinVMTime">
            <summary>
            Critical Min VM Time(Seconds)
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.QueuePath">
            <summary>
            Queue Path
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.ServiceName">
            <summary>
            Service name
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.ExecutableDirectory">
            <summary>
            Excutable directory
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.ExecutableFileName">
            <summary>
            Excutable file name
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.ExecutableArgument">
            <summary>
            Excutable arguments
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.SubExecutableDirectory">
            <summary>
            Sub Excutable Directory
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.SubExecutableFileName">
            <summary>
            Sub Excutable File name
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.SubExecutableParameter">
            <summary>
            Sub Excutable Parameter
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.InstallDateTime">
            <summary>
            Install Date and Time
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.LastModifiedDateTime">
            <summary>
            Last modified date and time
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.ServiceConfiguration">
            <summary>
            Service configuration
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.WarnMethodServiceDown">
            <summary>
            Warning method of service down
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.WarnMethodMaxMemoryUsage">
            <summary>
            Warning method of Max memory usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.WarnMethodMinMemoryUsage">
            <summary>
            Warning method of Min memory usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.WarnMethodMaxVMUsage">
            <summary>
            Warning method of Max VM Usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.WarnMethodMinVMUsage">
            <summary>
            Warning method of Min VM Usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.WarnMethodMaxCPUUsage">
            <summary>
            Warning method of Max CPU Usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.WarnMethodMinCPUUsage">
            <summary>
            Warning method of Min CPU Usage
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.Functions">
            <summary>
            Function list
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.Interfaces">
            <summary>
            Interface list
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.Directories">
            <summary>
            Directory list
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.NeedToMonitorRunning">
            <summary>
            If 'YES', monitor service will be try to start this service when this service stopped.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.NeedToWarnServiceDown">
            <summary>
            If 'YES', monitor service will warn when application is down
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.NeedToWarnMaxMemoryUsage">
            <summary>
            If 'YES', monitor service will warn when pysicial memory usage over than critical point(CriticalMaxMemoryUsage) for critical time(CriticalMaxMemoryTime).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.NeedToWarnMinMemoryUsage">
            <summary>
            If 'YES', monitor service will warn when pysicial memory usage less than critical point(CriticalMinMemoryUsage) for critical time(CriticalMinMemoryTime).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.NeedToWarnMaxVMUsage">
            <summary>
            If 'YES', monitor service will warn when virtual memory usage over than critical point(CriticalMaxVMUsage) for critical time(CriticalMaxVMTime).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.NeedToWarnMinVMUsage">
            <summary>
            If 'YES', monitor service will warn when virtual memory usage over than critical point(CriticalMinVMUsage) for critical time(CriticalMinVMUsage).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.NeedToWarnMaxCPUUsage">
            <summary>
            If 'YES', monitor service will warn when CPU usage over than critical point(CriticalMaxCPUUsage) for critical time(CriticalMaxCPUTime).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.NeedToWarnMinCPUUsage">
            <summary>
            If 'YES', monitor service will warn when CPU usage less than critical point(CriticalMinCPUTime) for critical time(CriticalMinCPUTime).
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModel.NeedToAllWarn">
            <summary>
            If 'YES', all warning will run
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.ServiceBasicModelSet">
            <summary>
            This is service model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.SystemBasic.ServiceGroupBasicModel">
            <summary>
            This is service group model
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceGroupBasicModel.Server">
            <summary>
            Server level
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceGroupBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceGroupBasicModel.Services">
            <summary>
            Service list
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.#ctor">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.#ctor(TAP.Models.SystemBasic.SystemBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.<br></br>
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.Dispose">
            <summary>
            This method disposes this model.<br></br>
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.<br></br> 
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceGroupBasicModel.NeedToAllWarn">
            <summary>
            This method is not supported in this model.
            </summary>
        </member>
        <member name="T:TAP.Models.SystemBasic.ServiceGroupBasicModelSet">
            <summary>
            This is service group model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceGroupBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.SystemBasic.ServiceGroupBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.SystemBasic.ServiceGroupBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.EnumUIControlType">
            <summary>
            This enumeratior is control type.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.BUTTON">
            <summary>
            Button
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.TEXTBOX">
            <summary>
            Text box
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.CHECKBOX">
            <summary>
            Check box
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.RADIOBUTTON">
            <summary>
            Radio button
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.COMBOBOX">
            <summary>
            Combo box
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.CONTEXTMENU">
            <summary>
            Context menu
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.CONTAINER">
            <summary>
            Container
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.SQUAREMAP">
            <summary>
            Sqaure map
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.SQUAREBOARD">
            <summary>
            Square board
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.SHEET">
            <summary>
            Sheet
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.DATETIME_PICKER">
            <summary>
            DateTime picker
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.NUMBERBOX">
            <summary>
            Number box
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.DOUBLE_DATETIME_PICKER">
            <summary>
            Double DateTime picker
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIControlType.OTHERS">
            <summary>
            Other controls
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.EnumCommandType">
            <summary>
            This enumeratior is command type.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumCommandType.COMMAND">
            <summary>
            Command for modify
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumCommandType.DELETE">
            <summary>
            Command for delete
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumCommandType.CLEAR">
            <summary>
            Command for search
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumCommandType.EXIT">
            <summary>
            Command for control
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumCommandType.SEARCH">
            <summary>
            No action
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumCommandType.ADD">
            <summary>
            Add
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumCommandType.VIEW">
            <summary>
            View
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumCommandType.OTHERS">
            <summary>
            Others
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.EnumShortcutKey">
            <summary>
            This enumeratior is short cut key combination.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumShortcutKey.NONE">
            <summary>
            No short cut
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumShortcutKey.ALT">
            <summary>
            Alt key only
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumShortcutKey.SHIFT">
            <summary>
            Shift key only
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumShortcutKey.CTRL">
            <summary>
            Control key only
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumShortcutKey.CTRLSHIFT">
            <summary>
            Control key + Shift key
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumShortcutKey.F">
            <summary>
            Function key
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.EnumBuitInUILayout">
            <summary>
            This enumeratior is built in UI lay out.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.H1">
            <summary>
            Horizontal layout #1
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.H2">
            <summary>
            Horizontal layout #2
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.H3">
            <summary>
            Horizontal layout #3
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.H4">
            <summary>
            Horizontal layout #4
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.H5">
            <summary>
            Horizontal layout #5
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.H6">
            <summary>
            Horizontal layout #6
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.H7">
            <summary>
            Horizontal layout #7
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.V1">
            <summary>
            Vetical layout #1
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.V2">
            <summary>
            Vetical layout #2
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.V3">
            <summary>
            Vetical layout #3
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.V4">
            <summary>
            Vetical layout #4
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.V5">
            <summary>
            Vetical layout #5
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.V6">
            <summary>
            Vetical layout #5
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.X1">
            <summary>
            Complex layout#1
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.X2">
            <summary>
            Complex layout #2
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.X3">
            <summary>
            Complex layout #3
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.X4">
            <summary>
            Complex layout #4
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.X5">
            <summary>
            Complex layout #5
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumBuitInUILayout.X6">
            <summary>
            Complex layout #6
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.EnumSupportedEvents">
            <summary>
            This enumeratior is supported events of controls.
            If your control does not have event that you assigend, event will not be acted.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumSupportedEvents.NONE">
            <summary>
            Control does not have any event.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumSupportedEvents.TEXTBOX_KEYDOWN">
            <summary>
            KeyDown event of TextBox
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumSupportedEvents.BUTTON_CLICK">
            <summary>
            Click event of button
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumSupportedEvents.COMBOBOX_TEXTCHANGED">
            <summary>
            TextChanged event of combobox
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumSupportedEvents.SHEET_SELECTCELL">
            <summary>
            SelectCell event of sheet
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumSupportedEvents.MAP_GETSELECTEDCELL">
            <summary>
            GetSelectCell event of Map
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.EnumLayoutPosition">
            <summary>
            This enumeratior represents container identificator of UI lay out
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.A">
            <summary>
            Position A
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.B">
            <summary>
            Position B
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.C">
            <summary>
            Position C
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.D">
            <summary>
            Position D
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.E">
            <summary>
            Position E
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.F">
            <summary>
            Position F
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.G">
            <summary>
            Position G
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.H">
            <summary>
            Position H
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.I">
            <summary>
            Position I
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.J">
            <summary>
            Position J
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.K">
            <summary>
            Position K
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.L">
            <summary>
            Position L
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.M">
            <summary>
            Position M
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumLayoutPosition.N">
            <summary>
            Position N
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.EnumContainerType">
            <summary>
            This enumeratior represents container type
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumContainerType.PANEL">
            <summary>
            Panel type
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumContainerType.CONTEXT_MENU">
            <summary>
            Context menu type
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.EnumColumnAlign">
            <summary>
            This enumeratior represents column align types
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumColumnAlign.LEFT">
            <summary>
            Left align
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumColumnAlign.CENTER">
            <summary>
            Center align
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumColumnAlign.RIGHT">
            <summary>
            Right Align
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.EnumUIType">
            <summary>
            This is enumeratior represents ui types
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIType.VIEW">
            <summary>
            View
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIType.MANAGEMENT">
            <summary>
            Management
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIType.START">
            <summary>
            Start 
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.EnumUIType.COMPLETE">
            <summary>
            Complete
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.ColumnModel">
            <summary>
            This is column info UI model.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ColumnModel._COLUMN_NAME_MEMBERNAME">
            <summary>
            Member column name<br></br>
            멤버 컬럼 이름
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ColumnModel._ARGUMENTKEY_MEMBERNAME">
            <summary>
            Member argument key<br></br>
            멤버 매개변수 이름
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ColumnModel._SYSTEM_TABLE_NAME_COLUMNS">
            <summary>
            Column table name<br></br>
            컬럼 테이블 이름
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ColumnModel.memberName">
            <summary>
            Member name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ColumnModel.displayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ColumnModel.aliasName">
            <summary>
            Alais name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ColumnModel.width">
            <summary>
            Width for display
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ColumnModel.isEssentialColumn">
            <summary>
            If this member set to 'YES', this column will be displayed in default
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ColumnModel.columnAlign">
            <summary>
            Column Align
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ColumnModel.DisplayName">
            <summary>
            Text for display
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ColumnModel.AliasName">
            <summary>
            Alais name
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ColumnModel.Width">
            <summary>
            Width for display
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ColumnModel.IsEssentialColumn">
            <summary>
            If this member set to 'YES', this column will be displayed in default.
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ColumnModel.ColumnAlign">
            <summary>
            Column Align
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.#ctor(TAP.Models.IndependentDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachical structure</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.#ctor(TAP.Models.IndependentDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachical structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.#ctor(TAP.Models.IndependentDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.ColumnModelSet">
            <summary>
            This is column UI model set.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModelSet.#ctor">
            <summary>
            This method creates instance of this.<br></br>
            모델셋의 인스턴스를 생성합니다. 
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ColumnModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.UIBasic.ColumnModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ColumnModelSet.LoadAllColumns(System.String)">
            <summary>
            This method loads all column information.
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.UIBasicModelBase">
            <summary>
            This model is base model of all UI Basic models.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._SYSTEM_TABLE_NAME_MDI">
            <summary>
            Table name of MDI
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._SYSTEM_TABLE_NAME_MAINMENU">
            <summary>
            Table name of main menu
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._SYSTEM_TABLE_NAME_UI">
            <summary>
            Table name of UI
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._SYSTEM_TABLE_NAME_UIFUNCTION">
            <summary>
            Table name of UI functions
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._SYSTEM_TABLE_NAME_UICONTAINER">
            <summary>
            Table name of UI container
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._SYSTEM_TABLE_NAME_UIAUTHORITY">
            <summary>
            Table name of UI Authority
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._COLUMN_NAME_MDI">
            <summary>
            MDI column name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._COLUMN_NAME_MAINMENU">
            <summary>
            Main menu column name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._COLUMN_NAME_UI">
            <summary>
            UI column name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._COLUMN_NAME_UICONTAINER">
            <summary>
            UI container column name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._COLUMN_NAME_UIFUNCTION">
            <summary>
            UI function column name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._COLUMN_NAME_UIAUTHORITY">
            <summary>
            UI Authority column name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._ARGUMENTKEY_MDI">
            <summary>
            MDI argument name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._ARGUMENTKEY_MAINMENU">
            <summary>
            Main menu argument name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._ARGUMENTKEY_UI">
            <summary>
            UI argument name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._ARGUMENTKEY_UICONTAINER">
            <summary>
            UI container argument name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._ARGUMENTKEY_UIFUNCTION">
            <summary>
            UI function argument name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase._ARGUMENTKEY_UIAUTHORITY">
            <summary>
            UI Authority argument name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase.currentModel">
            <summary>
            If "YES", this model is in using
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase.description">
            <summary>
            Description of model
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase.shortCutKey">
            <summary>
            Short cut key
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase.shortCutCharacter">
            <summary>
            Short cut string
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase.shortCutDisplayString">
            <summary>
            Short cut string for dispaly
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase.icon">
            <summary>
            Icon number
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModelBase.shortCutKeys">
            <summary>
            Shot cut key for windows forms
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.DefaultInformation">
            <summary>
            Hierachical structure of UI model
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.Region">
            <summary>
            Region level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.Facility">
            <summary>
            Facility level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.CurrentModel">
            <summary>
            If "YES", this model is in using.
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.Description">
            <summary>
            Description of model
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.ShortCutKey">
            <summary>
            Short cut key combination
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.ShortCutCharacter">
            <summary>
            Short cut string
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.ShortCutDisplayString">
            <summary>
            Short cut string for dispaly
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.Icon">
            <summary>
            Icon number
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelBase.ShortCutKeys">
            <summary>
            Shot cut key for windows forms
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.ValidateDefaultInformation(System.Int32,System.Boolean)">
            <summary>
            This method validates Hierachy structure of model.
            </summary>
            <param name="level">Hierachy sequence</param>
            <param name="needtoCheckAll">If 'TRUE', this method checks value 'ALL'.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.MakeDefaultArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.MakeParentArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method extracts name list of hierachical structure that is consist this model.
            </summary>
            <returns>Array includes name list of hierachical structure that is consist this model</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.GetDefaultInfo">
            <summary>
            This method returns default information of model
            </summary>
            <returns>Default information of model</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.GetChangedLevel(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method get member that changed by changing default info event
            </summary>
            <param name="defaultInfo">Model defult Info.</param>
            <returns>Beggest level changed</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.MergeModel(TAP.Models.Model,System.String)">
            <summary>
            This method is not supported in this model.
            </summary>
            <param name="model"></param>
            <param name="updateUser"></param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.SplitModel(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            This method is not supported in this model.
            </summary>
            <param name="splitModelName"></param>
            <param name="nestModelNames"></param>
            <param name="updateUser"></param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.AssignArrayValues(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.CreateMailMessage(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.LoadMailReceiverList(System.String)">
            <summary>
            This methods loads receiver list
            </summary>
            <param name="mailType">Mailing type</param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.LoadBasicModel(System.Int32)">
            <summary>
            This method is not supported.
            </summary>
            <param name="modelLevel"></param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelBase.SetShortCut">
            <summary>
            This method sets up short cut keys.
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.UIBasicDefaultInfo">
            <summary>
            This class is hierachical structure of UI model.
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicDefaultInfo.MDI">
            <summary>
            MDI level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicDefaultInfo.MainMenu">
            <summary>
            Main menu level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicDefaultInfo.UI">
            <summary>
            UI level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicDefaultInfo.Container">
            <summary>
            Container level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicDefaultInfo.UIFunction">
            <summary>
            Function level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicDefaultInfo.UIAuthority">
            <summary>
            Authority level
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.#ctor">
            <summary>
            This creates instance of hierachical structure.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.#ctor(System.Data.DataRow)">
            <summary>
            This creates instance of hierachical structure.
            </summary>
            <param name="dataRow">Hierachical structure data</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.Dispose">
            <summary>
            This dispoes instance of hierachical structure.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.CreateInstance(System.Data.DataRow)">
            <summary>
            This method instance of hierachical structure.
            </summary>
            <param name="dataRow">Hierachy structure data</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.Copy">
            <summary>
            This method makes copy of hierachical structure.
            </summary>
            <returns>Copy of hierachical structure</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.CreateXPath(System.Int32)">
            <summary>
            This method is not implemented 
            </summary>
            <param name="level">level</param>
            <returns>xPath</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.UIBasicDefaultInfo.HierarchicalDefaultInfo">
            <summary>
            Enumeratior of hierachical structure
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicDefaultInfo.HierarchicalDefaultInfo.REGION">
            <summary>
            Region
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicDefaultInfo.HierarchicalDefaultInfo.FACILITY">
            <summary>
            Facility
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicDefaultInfo.HierarchicalDefaultInfo.MDI">
            <summary>
            MDI
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicDefaultInfo.HierarchicalDefaultInfo.MAINMENU">
            <summary>
            Main menu
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicDefaultInfo.HierarchicalDefaultInfo.UI">
            <summary>
            UI
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicDefaultInfo.HierarchicalDefaultInfo.CONTAINER">
            <summary>
            Container
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicDefaultInfo.HierarchicalDefaultInfo.UIFUNCTION">
            <summary>
            UI function
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicDefaultInfo.HierarchicalDefaultInfo.UIAUTHORITY">
            <summary>
            UI function
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.MakeArgumentPack">
            <summary>
            This method makes argument pack using hierachical structure.
            This method made argument pack does not contain identification argument.
            </summary>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.MakeArgumentPack(System.Int32,System.Boolean)">
            <summary>
             This method makes argument pack using default info.
             This method made argument pack contains identification argument.
            </summary>
            <param name="level">Level of current model.</param>
            <param name="isParent">If this argument set to false, This method return data for one model only.</param>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            This method changes model default info
            </summary>
            <param name="infoDictionary">Default Info dictionary</param>
            <param name="modelLevel">Model level</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.GetCurrentDefaultInfo">
            <summary>
            This method extract default info string as dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicDefaultInfo.GetMemberLevel(System.String)">
            <summary>
            This method get level of specified member;
            </summary>
            <param name="memberName">Level of specified member</param>
        </member>
        <member name="T:TAP.Models.UIBasic.ContainerBasicModel">
            <summary>
            This is container UI model.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.ContainerBasicModel.uiFunctions">
            <summary>
            Functions of this model
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModel.DisplayLayout">
            <summary>
            Layout style of this container
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModel.Title">
            <summary>
            Title of this container
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModel.ControlsOnRow">
            <summary>
            Control count per one row
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModel.ContainerType">
            <summary>
            Container type
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModel.UIFunctions">
            <summary>
            UI function list
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModel.MDI">
            <summary>
            MDI  level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModel.MainMenu">
            <summary>
            Main menu  level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModel.UI">
            <summary>
            UI  level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.<br></br>
            인스턴스를 생성합니다.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.<br></br>
            모델내 필드를 초기화합니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.Dispose">
            <summary>
            This method disposes this model.<br></br>
            모델을 소멸시킵니다.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this mode</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.ContainerBasicModelSet">
            <summary>
            This is cotainer UI model set.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.<br></br>
            모델셋의 인스턴스를 생성합니다. 
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.<br></br>
            지정된 이름을 가진 모델을 반환합니다. 
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.UIBasic.ContainerBasicModelSet.Models">
            <summary>
            This method returns all models in model set.<br></br>
            모델셋에 포함된 모델들을 가져옵니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.<br></br>
            모델 데이터를 로드하고, 로드된 모델들로 모델셋을 채웁니다. 
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.ContainerBasicModelSet.Copy">
            <summary>
            This method copies models in model set.<br></br>
            모델셋내의 모든 모델을 복사합니다. 
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.MainMenuBasicModel">
            <summary>
            This is main menu UI model.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.MainMenuBasicModel.displayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.MainMenuBasicModel.uis">
            <summary>
            Functions of this model
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.MainMenuBasicModel.DisplayName">
            <summary>
            Name for displaying<br></br>
            디스플레이용 이름
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.MainMenuBasicModel.UIs">
            <summary>
            UI list<br></br>
            UI 목록
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.MainMenuBasicModel.MDI">
            <summary>
            MDI level<br></br>
            MDI 레벨
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.MainMenuBasicModel.Name">
            <summary>
            Model identity<br></br>
            모델의 아이덴티티
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.<br></br>
            모델내 필드를 초기화합니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.Dispose">
            <summary>
            This method disposes this model.<br></br>
            모델을 소멸시킵니다.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="T:TAP.Models.UIBasic.MainMenuBasicModelSet">
            <summary>
            This is main menu UI model set.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.<br></br>
            모델셋의 인스턴스를 생성합니다. 
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.MainMenuBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.<br></br>
            지정된 이름을 가진 모델을 반환합니다. 
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.UIBasic.MainMenuBasicModelSet.Models">
            <summary>
            This method returns all models in model set.<br></br>
            모델셋에 포함된 모델들을 가져옵니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.<br></br>
            모델 데이터를 로드하고, 로드된 모델들로 모델셋을 채웁니다. 
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MainMenuBasicModelSet.Copy">
            <summary>
            This method copies models in model set.<br></br>
            모델셋내의 모든 모델을 복사합니다. 
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.MDIBasicModel">
            <summary>
            This is MDI model.<br></br>
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.MDIBasicModel.mainMenus">
            <summary>
            Main menus of this model
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.MDIBasicModel.MainMenus">
            <summary>
            Main menu list<br></br>
            메인메뉴 목록
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.MDIBasicModel.Name">
            <summary>
            Model identity<br></br>
            모델의 아이덴티티
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.<br></br>
            모델내 필드를 초기화합니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.Dispose">
            <summary>
            This method disposes this model.<br></br>
            모델을 소멸시킵니다.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.MDIBasicModelSet">
            <summary>
            This is MDI model set.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.<br></br>
            모델셋의 인스턴스를 생성합니다. 
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.MDIBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.<br></br>
            지정된 이름을 가진 모델을 반환합니다. 
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.UIBasic.MDIBasicModelSet.Models">
            <summary>
            This method returns all models in model set.<br></br>
            모델셋에 포함된 모델들을 가져옵니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.<br></br>
            모델 데이터를 로드하고, 로드된 모델들로 모델셋을 채웁니다. 
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.MDIBasicModelSet.Copy">
            <summary>
            This method copies models in model set.<br></br>
            모델셋내의 모든 모델을 복사합니다. 
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.UIBasicModel">
            <summary>
            This is UI UI model.<br></br>
            UI UI모델입니다.
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModel.displayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModel.assemblyFileName">
            <summary>
            Assembly file name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModel.assemblyName">
            <summary>
            Assembly name
            </summary>
        </member>
        <member name="F:TAP.Models.UIBasic.UIBasicModel.containers">
            <summary>
            Functions of this model
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.DisplayName">
            <summary>
            Name for displaying
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.AssemblyFileName">
            <summary>
            Assembly file name
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.AssemblyName">
            <summary>
            Assembly name
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.SubType">
            <summary>
            Subtype
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.PanelName">
            <summary>
            Panel Name
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.ImageName">
            <summary>
            Image Name
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.SmallImageName">
            <summary>
            Small Image Name
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.Containers">
            <summary>
            Container list
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.UILayout">
            <summary>
            UI Layout
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.UIType">
            <summary>
            UI Type
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.MDI">
            <summary>
            MDI  level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.MainMenu">
            <summary>
            Main menu  level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this mode</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.<br></br>
            네스트 모델에 값을 할당합니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.UIBasicModelSet">
            <summary>
            This is UI UI model set.<br></br>
            UI UI 모델셋입니다.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.<br></br>
            모델셋의 인스턴스를 생성합니다. 
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.<br></br>
            지정된 이름을 가진 모델을 반환합니다. 
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.UIBasic.UIBasicModelSet.Models">
            <summary>
            This method returns all models in model set.<br></br>
            모델셋에 포함된 모델들을 가져옵니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.<br></br>
            모델 데이터를 로드하고, 로드된 모델들로 모델셋을 채웁니다. 
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIBasicModelSet.Copy">
            <summary>
            This method copies models in model set.<br></br>
            모델셋내의 모든 모델을 복사합니다. 
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.UIAuthorityBasicModel">
            <summary>
            This is UI Authrity basic model.
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModel.CommandType">
            <summary>
            Command Type
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModel.MemberType">
            <summary>
            Control type
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModel.MDI">
            <summary>
            MDI level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModel.MainMenu">
            <summary>
            Main menu level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModel.UI">
            <summary>
            UI 
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModel.Container">
            <summary>
            Conainer level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModel.UIFunction">
            <summary>
            Conainer level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.AssignArrayValues">
            <summary>
            This model does not have nest model.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.UIAuthorityBasicModelSet">
            <summary>
            This is UI authority model set.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.UIBasic.UIAuthorityBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIAuthorityBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.UIFunctionBasicModel">
            <summary>
            This is Function UI basic model.
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.AllowedToEveryone">
            <summary>
            Control type
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.ControlType">
            <summary>
            Control type
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.CommandType">
            <summary>
            Command type
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.IOInfo">
            <summary>
            I/O information
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.LocationX">
            <summary>
            Location X-coordinate
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.LocationY">
            <summary>
            Location Y-coordinate
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Height">
            <summary>
            Height
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Width">
            <summary>
            Width
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.ImageIndex">
            <summary>
            Image index
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.ContextMenu">
            <summary>
            Context menu
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Text">
            <summary>
            Text
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.ControlTypeName">
            <summary>
            Control type name
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.ColumnNameList">
            <summary>
            Column name list
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Authority">
            <summary>
            Function authority
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Events">
            <summary>
            Default event of this function
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Visibles">
            <summary>
            Visible of function control
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Enables">
            <summary>
            Enable of function control
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Authorities">
            <summary>
            Authorities
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.MDI">
            <summary>
            MDI level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.MainMenu">
            <summary>
            Main menu level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.UI">
            <summary>
            UI 
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Container">
            <summary>
            Conainer level
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.#ctor(TAP.Models.UIBasic.UIBasicDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This method creates instance of this model. 
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.AssignArrayValues">
            <summary>
            This model does not have nest model.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="T:TAP.Models.UIBasic.UIFunctionBasicModelSet">
            <summary>
            This is UI function UI model set.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModelSet.#ctor">
            <summary>
            This method creates instance of this.
            </summary>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.UIBasic.UIFunctionBasicModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="M:TAP.Models.UIBasic.UIFunctionBasicModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="T:TAP.Models.User.EnumAuthorityOwnerType">
            <summary>
            This enumeratior is owner model of authority.
            </summary>
        </member>
        <member name="F:TAP.Models.User.EnumAuthorityOwnerType.USER">
            <summary>
            User
            </summary>
        </member>
        <member name="F:TAP.Models.User.EnumAuthorityOwnerType.USERGROUP">
            <summary>
            User group
            </summary>
        </member>
        <member name="T:TAP.Models.User.EnumUserGroupType">
            <summary>
            This enumeratior is user group list.
            </summary>
        </member>
        <member name="F:TAP.Models.User.EnumUserGroupType.ADMINISTRATOR">
            <summary>
            Administrator of this system
            </summary>
        </member>
        <member name="F:TAP.Models.User.EnumUserGroupType.SPECIALIST">
            <summary>
            This user group has 'SPECIAL' authority for all functions
            </summary>
        </member>
        <member name="F:TAP.Models.User.EnumUserGroupType.MANAGER">
            <summary>
            This user group has 'CREATE' authority for all functions
            </summary>
        </member>
        <member name="F:TAP.Models.User.EnumUserGroupType.OPERATORS">
            <summary>
            This user goup has 'MODIFY' authority for all functions
            </summary>
        </member>
        <member name="F:TAP.Models.User.EnumUserGroupType.VIEWER">
            <summary>
            This user group has 'SEARCH' authority for all functions
            </summary>
        </member>
        <member name="F:TAP.Models.User.EnumUserGroupType.GUEST">
            <summary>
            This user group has 'ACCESS' authority for all functions
            </summary>
        </member>
        <member name="T:TAP.Models.User.UserModelBase">
            <summary>
            This model is base model of all user models
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._USER_TABLE_NAME_USERGROUP">
            <summary>
            User group table name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._USER_TABLE_NAME_USERS">
            <summary>
            User table name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._USER_TABLE_NAME_GROUPMEMBERS">
            <summary>
            Members of User group table name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_DEPARTMENT">
            <summary>
            Department column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_USERGROUP">
            <summary>
            User group column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_USERPOSITION">
            <summary>
            User position column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_USERID">
            <summary>
            User ID column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_USERAUTHORITY">
            <summary>
            User authority column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_MENUNAME">
            <summary>
            Manu name column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_AUTHORITYNAME">
            <summary>
            Authority column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_OWNER">
            <summary>
            Owner column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_OWNERTYPE">
            <summary>
            Owner type column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._COLUMN_NAME_GROUPMEMBER">
            <summary>
            Group member Column name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._USER_GROUP_DEVELOPERS">
            <summary>
             Developer user group name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._ARGUMENTKEY_SUBJECTNAME">
            <summary>
            Subject name argument name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._ARGUMENTKEY_AUTHORITYSUBJECT">
            <summary>
            Subject of authority name argument name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._ARGUMENTKEY_MENUNAME">
            <summary>
            Menu name argument name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._ARGUMENTKEY_AUTHORITYNAME">
            <summary>
            Authority name argument name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._ARGUMENTKEY_USERID">
            <summary>
            User ID argument name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._ARGUMENTKEY_USERGROUP">
            <summary>
            User group argument name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._ARGUMENTKEY_OWNER">
            <summary>
            Owner argument name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._ARGUMENTKEY_OWNERTYPE">
            <summary>
            Owner type argument name
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserModelBase._ARGUMENTKEY_GROUPMEMBER">
            <summary>
            Group member argument type
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModelBase.DefaultInformation">
            <summary>
            Hierachical structure of user model
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModelBase.Region">
            <summary>
            Region level
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModelBase.Facility">
            <summary>
            Facility level
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModelBase.CurrentModel">
            <summary>
            If this member set to 'YES', this model is used in present time
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModelBase.Description">
            <summary>
            Description of model
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.ValidateDefaultInformation(System.Int32,System.Boolean)">
            <summary>
            This method validates Hierachy structure of model.
            </summary>
            <param name="level">Hierachy sequence</param>
            <param name="needtoCheckAll">If 'TRUE', this method checks value 'ALL'.</param>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.MakeDefaultArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.MakeParentArgumentPack">
            <summary>
            This method makes ArgumentPack for loading model data.
            </summary>
            <returns>Argument list</returns>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method extracts name list of hierachical structure that is consist this model.
            </summary>
            <returns>Array includes name list of hierachical structure that is consist this model</returns>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.GetDefaultInfo">
            <summary>
            This method returns default information of model
            </summary>
            <returns>Default information of model</returns>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.GetChangedLevel(TAP.Models.ModelDefaultInfo)">
            <summary>
            This method get member that changed by changing default info event
            </summary>
            <param name="defaultInfo">Model defult Info.</param>
            <returns>Beggest level changed</returns>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.MergeModel(TAP.Models.Model,System.String)">
            <summary>
            This model does not support this method.
            </summary>
            <param name="model"></param>
            <param name="updateUser"></param>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.SplitModel(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            This model does not support this method.
            </summary>
            <param name="splitModelName"></param>
            <param name="nestModelNames"></param>
            <param name="updateUser"></param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.AssignArrayValues(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.CreateMailMessage(System.String)">
            <summary>
            This method is not supported.
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.LoadMailReceiverList(System.String)">
            <summary>
            This methods loads receiver list
            </summary>
            <param name="mailType">Mailing type</param>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.User.UserModelBase.LoadBasicModel(System.Int32)">
            <summary>
            This method is not supported.
            </summary>
            <param name="modelLevel"></param>
        </member>
        <member name="T:TAP.Models.User.UserDefaultInfo">
            <summary>
            This class is hierachical structure of user model.
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserDefaultInfo.UserID">
            <summary>
            User level
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserDefaultInfo.UserGroup">
            <summary>
            User group level
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserDefaultInfo.GroupMember">
            <summary>
            User Group member
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.#ctor">
            <summary>
            This creates instance of hierachical structure.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.#ctor(System.Data.DataRow)">
            <summary>
            This creates instance of hierachical structure.
            </summary>
            <param name="dataRow">Hierachical structure data</param>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.Dispose">
            <summary>
            This dispoes instance of hierachical structure.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.CreateInstance(System.Data.DataRow)">
            <summary>
            This method instance of hierachical structure.
            </summary>
            <param name="dataRow">Hierachy structure data</param>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.Copy">
            <summary>
            This method makes copy of hierachical structure.
            </summary>
            <returns>Copy of hierachical structure</returns>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.CreateXPath(System.Int32)">
            <summary>
            This method is not implemented 
            </summary>
            <param name="level">level</param>
            <returns>xPath</returns>
        </member>
        <member name="T:TAP.Models.User.UserDefaultInfo.HierarchicalDefaultInfo">
            <summary>
            Enumeratior of hierachical structure.
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserDefaultInfo.HierarchicalDefaultInfo.REGION">
            <summary>
            Region 
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserDefaultInfo.HierarchicalDefaultInfo.FACILITY">
            <summary>
            Facility 
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserDefaultInfo.HierarchicalDefaultInfo.USERID">
            <summary>
            User ID
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserDefaultInfo.HierarchicalDefaultInfo.USERGROUP">
            <summary>
            User group 
            </summary>
        </member>
        <member name="F:TAP.Models.User.UserDefaultInfo.HierarchicalDefaultInfo.GROUPMEMBER">
            <summary>
            Authority 
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.MakeArgumentPack">
            <summary>
            This method makes argument pack using hierachical structure.
            This method made argument pack does not contain identification argument.
            </summary>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.MakeArgumentPack(System.Int32,System.Boolean)">
            <summary>
             This method makes argument pack using default info.
             This method made argument pack contains identification argument.
            </summary>
            <param name="level">Level of current model.</param>
            <param name="isParent">If this argument set to false, This method return data for one model only.</param>
            <returns>Argument pack</returns>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32)">
            <summary>
            This method changes model default info
            </summary>
            <param name="infoDictionary">Default Info dictionary</param>
            <param name="modelLevel">Model level</param>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.ChangeModelDefaultInfo(System.Collections.Generic.Dictionary{System.String,System.String},System.Int32,System.Collections.Generic.List{System.String})">
            <summary>
            This method changes model default info
            </summary>
            <param name="infoDictionary">Default Info dictionary</param>
            <param name="modelLevel">Model level</param>
            <param name="defaultInfoMembers">Default info members</param>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.GetCurrentDefaultInfo">
            <summary>
            This method extract default info string as dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:TAP.Models.User.UserDefaultInfo.GetMemberLevel(System.String)">
            <summary>
            This method get level of specified member;
            </summary>
            <param name="memberName">Level of specified member</param>
        </member>
        <member name="T:TAP.Models.User.GroupMemberModel">
            <summary>
            This is member of user group model
            </summary>
        </member>
        <member name="P:TAP.Models.User.GroupMemberModel.Department">
            <summary>
            User's department
            </summary>
        </member>
        <member name="P:TAP.Models.User.GroupMemberModel.Position">
            <summary>
            User's position
            </summary>
        </member>
        <member name="P:TAP.Models.User.GroupMemberModel.UserName">
            <summary>
            User's first name
            </summary>
        </member>
        <member name="P:TAP.Models.User.GroupMemberModel.UserLastName">
            <summary>
            User's last name
            </summary>
        </member>
        <member name="P:TAP.Models.User.GroupMemberModel.Language">
            <summary>
            User's language
            </summary>
        </member>
        <member name="P:TAP.Models.User.GroupMemberModel.UserGroup">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.User.GroupMemberModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.#ctor(TAP.Models.User.UserDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.#ctor(TAP.Models.User.UserDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.#ctor(TAP.Models.User.UserDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
             This method creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModel.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method extracts name list of hierachical structure that is consist this model.
            </summary>
            <returns>Array includes name list of hierachical structure that is consist this model</returns>
        </member>
        <member name="T:TAP.Models.User.GroupMemberModelSet">
            <summary>
            This is user group user model set.
            </summary>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModelSet.#ctor">
            <summary>
            This method creates instance of this.
            </summary>
        </member>
        <member name="P:TAP.Models.User.GroupMemberModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.User.GroupMemberModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.User.GroupMemberModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="T:TAP.Models.User.UserGroupModel">
            <summary>
            This is user group user model.
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserGroupModel.Levels">
            <summary>
            Level
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserGroupModel.Name">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserGroupModel.Members">
            <summary>
            Model identity
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.#ctor(TAP.Models.User.UserDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.#ctor(TAP.Models.User.UserDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.#ctor(TAP.Models.User.UserDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
             This method creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.Copy">
            <summary>
            This method makes copy of this model.
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="M:TAP.Models.User.UserGroupModel.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method extracts name list of hierachical structure that is consist this model.
            </summary>
            <returns>Array includes name list of hierachical structure that is consist this model</returns>
        </member>
        <member name="T:TAP.Models.User.UserGroupModelSet">
            <summary>
            This is user group user model set.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserGroupModelSet.#ctor">
            <summary>
            This method creates instance of this.<br></br>
            모델셋의 인스턴스를 생성합니다. 
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserGroupModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.User.UserGroupModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserGroupModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="M:TAP.Models.User.UserGroupModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.User.UserGroupModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
        <member name="T:TAP.Models.User.UserModel">
            <summary>
            This is 'user' user model.<br></br>
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.Department">
            <summary>
            User's department
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.Position">
            <summary>
            User's position
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.UserName">
            <summary>
            User's first name
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.UserMiddleName">
            <summary>
            User's middle name
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.UserLastName">
            <summary>
            User's last name
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.ContactNo">
            <summary>
            User's contact number
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.MobileNo">
            <summary>
            User's mobile phone number
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.MailAddress">
            <summary>
            User's E-mail address
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.Password">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.UserGroupName">
            <summary>
            User group
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.Language">
            <summary>
            User language
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.UserGroup">
            <summary>
            User group information
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModel.Name">
            <summary>
            Model identity<br></br>
            모델의 아이덴티티
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserModel.#ctor">
            <summary>
            This creator creates instance of this.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserModel.#ctor(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.User.UserModel.#ctor(TAP.Models.User.UserDefaultInfo)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
        </member>
        <member name="M:TAP.Models.User.UserModel.#ctor(TAP.Models.User.UserDefaultInfo,System.Data.DataRow)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
        </member>
        <member name="M:TAP.Models.User.UserModel.#ctor(TAP.Models.User.UserDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">If "TRUE", this model loads nest models.</param>
        </member>
        <member name="M:TAP.Models.User.UserModel.CreateInstance(System.String)">
            <summary>
            This creator creates instance of this.
            </summary>
            <param name="name">Model Name</param>
        </member>
        <member name="M:TAP.Models.User.UserModel.CreateInstance(TAP.Models.ModelDefaultInfo,System.Data.DataRow,TAP.EnumFlagYN)">
            <summary>
             This method creates instance of this.
            </summary>
            <param name="defaultInformation">Hierachy structure</param>
            <param name="defaultData">Default model data</param>
            <param name="includeNestData">Including nest data or not</param>
        </member>
        <member name="M:TAP.Models.User.UserModel.InitializeFields">
            <summary>
            This method initializes all fields.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserModel.Dispose">
            <summary>
            This method disposes this model.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserModel.Copy">
            <summary>
            This method makes copy of this model.<br></br>
            모델의 복사본을 반듭니다. 
            </summary>
            <returns>Copy of this model</returns>
        </member>
        <member name="M:TAP.Models.User.UserModel.AssignArrayValues">
            <summary>
            This method assings data to nest models.<br></br>
            네스트 모델에 값을 할당합니다. 
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserModel.LoadModelHistory(TAP.ArgumentPack)">
            <summary>
            This method loads history of this model
            </summary>
            <param name="arguments">Arguments</param>
            <returns>Model history array</returns>
        </member>
        <member name="M:TAP.Models.User.UserModel.ExtractDefaultInformationList(System.Int32)">
            <summary>
            This method extracts name list of hierachical structure that is consist this model.
            </summary>
            <returns>Array includes name list of hierachical structure that is consist this model</returns>
        </member>
        <member name="T:TAP.Models.User.UserModelSet">
            <summary>
            This is 'user' user model set.<br></br>
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserModelSet.#ctor">
            <summary>
            This method creates instance of this.
            </summary>
        </member>
        <member name="P:TAP.Models.User.UserModelSet.Item(System.String)">
            <summary>
            This property returns model indicated by name.
            </summary>
            <param name="name">Model name</param>
            <returns>Model indicated by name</returns>
        </member>
        <member name="P:TAP.Models.User.UserModelSet.Models">
            <summary>
            This method returns all models in model set.
            </summary>
        </member>
        <member name="M:TAP.Models.User.UserModelSet.Copy">
            <summary>
            This method copies models in model set.
            </summary>
            <returns>Model set</returns>
        </member>
        <member name="M:TAP.Models.User.UserModelSet.ChangeDefaultInfo(TAP.Models.ModelDefaultInfo,System.String,TAP.Models.EnumEventFlag,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            This method changes hierachical structure of model in model set.
            </summary>
            <param name="defaultInfo">Hierachical structure</param>
            <param name="events">Event</param>
            <param name="eventFlag">Event flag</param>
            <param name="eventTime">Date and time of event</param>
            <param name="eventComment">Last event comment</param>
            <param name="command">Last job code</param>
            <param name="mainOperation">Last Main operation</param>
            <param name="operation">Last operation</param>
            <param name="step">Last setp</param>
            <param name="status">Last setp</param>
        </member>
        <member name="M:TAP.Models.User.UserModelSet.LoadModels(TAP.ArgumentPack,System.String,TAP.EnumFlagYN,System.Boolean)">
            <summary>
            This model loads models and fills model set using loaded data.
            </summary>
            <param name="arguments">Argument list</param>
            <param name="users">User</param>
            <param name="includeNestModels">If "TRUE", each models includes nest model.</param>
            <param name="parentMode">If "TRUE", this method using "Parent-Type" query.</param>
        </member>
    </members>
</doc>
